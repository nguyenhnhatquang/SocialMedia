{"version":3,"sources":["pages sync /^/.*$","redux/actions/notifyAction.js","redux/actions/messageAction.js","components/NotFound.js","customRouter/PageRender.js","customRouter/PrivateRouter.js","components/alert/Loading.js","components/alert/Toast.js","components/alert/Alert.js","redux/actions/adminAction.js","assets/audio/pristine.mp3","SocketClient.js","components/header/Search.js","components/header/Items.js","components/header/Header.js","components/StatusModal.js","components/sidebar/LeftSide.js","components/ChangePasswordModal.js","components/EditProfileModal.js","App.js","reportWebVitals.js","redux/reducers/authReducer.js","redux/reducers/userTypeReducer.js","redux/reducers/alertReducer.js","redux/reducers/themeReducer.js","redux/reducers/profileReducer.js","redux/reducers/statusReducer.js","redux/reducers/postReducer.js","redux/reducers/modalReducer.js","redux/reducers/detailPostReducer.js","redux/reducers/adminReducer.js","redux/reducers/discoverReducer.js","redux/reducers/suggestionsReducer.js","redux/reducers/socketReducer.js","redux/reducers/notifyReducer.js","redux/reducers/messageReducer.js","redux/reducers/changePasswordReducer.js","redux/reducers/editProfileReducer.js","redux/reducers/index.js","redux/store.js","index.js","components/Avatar.js","redux/actions/profileAction.js","components/UserCard.js","utils/mediaShow.js","redux/actions/globalTypes.js","redux/actions/authAction.js","components/LoadMoreButton.js","utils/imageUpload.js","redux/actions/suggestionsAction.js","redux/actions/discoverAction.js","components/PostThumb.js","components/auth/Login.js","components/auth/Signup.js","pages/auth.js","pages/message/index.js","pages/admin.js","components/home/Status.js","components/home/Posts.js","components/sidebar/RightSide.js","pages/home.js","components/message/LeftSide.js","components/home/post-card/CardHeader.js","components/Carousel.js","components/home/post-card/CardBody.js","components/LikeButton.js","components/home/post-card/CardFooter.js","redux/actions/commentAction.js","components/home/InputComment.js","components/home/comment/CommentCard.js","components/home/comment/CommentDisplay.js","components/home/comment.js","components/home/PostCard.js","utils/fetchData.js","pages/discover.js","redux/actions/postAction.js","pages/post/[id].js","pages/search.js","components/FollowButton.js","components/profile/Following.js","components/profile/Followers.js","components/profile/Info.js","components/profile/Saved.js","components/profile/Posts.js","pages/profile/[id].js","components/message/MsgDisplay.js","components/message/RightSide.js","pages/message/[id].js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","NOTIFY_TYPES","GET_NOTIFIES","CREATE_NOTIFY","REMOVE_NOTIFY","UPDATE_NOTIFY","UPDATE_SOUND","DELETE_ALL_NOTIFICATIONS","createNotify","msg","auth","socket","dispatch","a","postDataAPI","token","res","emit","data","notify","user","username","avatar","type","GLOBALTYPES","ALERT","payload","error","response","removeNotify","deleteDataAPI","url","getNotifies","getDataAPI","notifies","MESSAGE_TYPES","ADD_USER","ADD_MESSAGE","GET_CONVERSATIONS","GET_MESSAGES","UPDATE_MESSAGES","DELETE_MESSAGES","DELETE_CONVERSATION","CHECK_ONLINE_OFFLINE","addUser","message","users","every","item","_id","text","media","addMessage","getConversations","page","newArr","conversations","forEach","recipients","cv","push","result","getMessages","deleteMessages","newData","DeleteData","recipient","deleteConversation","NotFound","className","PageRender","useParams","pageName","useSelector","state","React","createElement","require","default","err","generatePage","PrivateRouter","props","localStorage","getItem","to","Loading","Toast","handleShow","bgColor","title","body","onClick","onclose","setTimeout","xmlns","viewBox","d","Alert","alert","useDispatch","loading","success","ADMIN_TYPES","SocketClient","audioRef","useRef","useEffect","role","on","totalActiveUsers","off","newPost","POST_TYPES","UPDATE_POST","newUser","AUTH","icon","sound","current","play","Notification","onclick","preventDefault","window","open","controls","ref","style","display","src","audio","Search","useState","search","setSearch","setUsers","history","useHistory","handleSearch","pathname","onSubmit","alt","placeholder","value","onChange","target","toLowerCase","replace","visibility","Items","check","setCheck","marginRight","marginTop","marginLeft","checked","Avatar","size","CHANGE_PASSWORD","borderBottom","logout","Header","scrollTo","top","getPosts","getSuggestions","StatusModal","theme","status","content","setContent","images","setImages","stream","setStream","videoRef","refCanvas","tracks","setTracks","handleStopStream","stop","onEdit","length","updatePost","createPost","STATUS","name","img","index","camera","imageShow","match","videoShow","URL","createObjectURL","splice","deleteImages","autoPlay","muted","width","height","filter","clientWidth","clientHeight","setAttribute","getContext","drawImage","toDataURL","navigator","mediaDevices","getUserMedia","video","then","mediaStream","srcObject","track","getTracks","catch","console","log","htmlFor","multiple","accept","files","newImages","file","variant","disabled","LeftSide","fullName","oldPassword","setOldPassword","newPassword","setNewPassword","cnfNewPassword","setCnfNewPassword","changePassword","autoFocus","EditProfileModal","mobile","address","website","story","gender","userData","setUserData","handleInput","updateProfileUser","EDIT_PROFILE","color","cols","rows","App","userType","modal","editProfile","moment","locale","updateLocale","longDateFormat","LLLL","weekdays","refreshToken","io","SOCKET","close","ChangePasswordModal","exact","path","component","Home","Auth","AdminDashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","userTypeReducer","USER_TYPE","alertReducer","themeReducer","THEME","ids","posts","profileReducer","PROFILE_TYPES","LOADING","GET_USER","FOLLOW","UNFOLLOW","EditData","GET_ID","GET_POSTS","statusReducer","postReducer","CREATE_POST","LOADING_POST","DELETE_POST","REPORT_POST","modalReducer","MODAL","detailPostReducer","GET_POST","total_users","total_posts","total_comments","total_likes","total_active_users","total_spam_posts","spam_posts","firstLoad","discoverReducer","DISCOVER_TYPES","UPDATE_POSTS","suggestionsReducer","SUGGEST_TYPES","GET_USERS","socketReducer","resultUsers","resultData","messageReducer","sender","messages","reverse","changePasswordReducer","editProfileReducer","combineReducers","profile","homePosts","detailPost","admin","discover","suggestions","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","DataProvider","children","ReactDOM","render","StrictMode","document","getElementById","getProfileUsers","res1","imageUpload","patchDataAPI","follow","followers","following","unfollow","UserCard","post","login","access_token","setItem","register","removeItem","location","href","LoadMoreButton","load","handleLoadMore","imgArr","formData","FormData","append","fetch","method","json","public_id","secure_url","getDiscoverPosts","PostThumb","likes","comments","Login","email","password","handleChangeInput","autoComplete","required","Signup","defaultChecked","Message","Status","Posts","setLoad","PostCard","RightSideBar","friends","RightSide","pageEnd","setPage","searchUsers","setSearchUsers","handleAddUser","isActive","IntersectionObserver","entries","isIntersecting","p","threshold","observe","opacity","CardHeader","createdAt","format","confirm","deletePost","reportPost","Carousel","setIndex","timeoutRef","clearTimeout","prevIndex","transform","_","idx","CardBody","readMore","setReadMore","slice","LikeButton","isLike","handleLike","handleUnLike","CardFooter","setIsLike","loadLike","setLoadLike","saved","setSaved","saveLoad","setSaveLoad","find","like","likePost","unLikePost","handleSavePost","savePost","handleUnSavePost","unSavePost","likeComment","comment","newComment","newComments","unLikeComment","InputComment","onReply","setOnReply","handleSubmit","trim","Date","toISOString","reply","commentId","tag","postId","postUserId","image","createComment","CommentCard","setOnEdit","flexDirection","updateComment","fromNow","deleteArr","cm","da","deleteComment","CommentDisplay","replyCm","showRep","setShowRep","next","setNext","Comments","setComments","showComments","setShowComments","replyComments","setReplyComments","newCm","newRep","axios","get","headers","Authorization","patch","delete","LoadIcon","Discover","SAVE_POST","imgNewUrl","imgOldUrl","getPost","reportExist","reports","report","Post","setPost","SearchPage","useLocation","FollowButton","followed","setFollowed","handleFollow","handleUnFollow","Following","setShowFollowing","Followers","setShowFollowers","Info","showFollowers","showFollowing","Saved","savePosts","setSavePosts","setResult","setPosts","Profile","saveTab","setSaveTab","MsgDisplay","maxWidth","maxHeight","toLocaleString","setUser","setText","setData","setMedia","loadMedia","setLoadMedia","refDisplay","scrollIntoView","behavior","block","getMessagesData","behaviour","newMedia","handleDeleteMedia","Conversation"],"mappings":"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","file":"static/js/main.955034e5.chunk.js","sourcesContent":["var map = {\n\t\"./admin\": 53,\n\t\"./admin.js\": 53,\n\t\"./auth\": 45,\n\t\"./auth.js\": 45,\n\t\"./discover\": 89,\n\t\"./discover.js\": 89,\n\t\"./home\": 54,\n\t\"./home.js\": 54,\n\t\"./message\": 50,\n\t\"./message/\": 50,\n\t\"./message/[id]\": 93,\n\t\"./message/[id].js\": 93,\n\t\"./message/index\": 50,\n\t\"./message/index.js\": 50,\n\t\"./post/[id]\": 90,\n\t\"./post/[id].js\": 90,\n\t\"./profile/[id]\": 92,\n\t\"./profile/[id].js\": 92,\n\t\"./search\": 91,\n\t\"./search.js\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 136;","import {GLOBALTYPES} from './globalTypes';\r\nimport {postDataAPI, deleteDataAPI, getDataAPI, patchDataAPI} from '../../utils/fetchData';\r\n\r\nexport const NOTIFY_TYPES = {\r\n    GET_NOTIFIES: \"GET_NOTIFIES\",\r\n    CREATE_NOTIFY: \"CREATE_NOTIFY\",\r\n    REMOVE_NOTIFY: \"REMOVE_NOTIFY\",\r\n    UPDATE_NOTIFY: \"UPDATE_NOTIFY\",\r\n    UPDATE_SOUND: \"UPDATE_SOUND\",\r\n    DELETE_ALL_NOTIFICATIONS: \"DELETE_ALL_NOTIFICATIONS\",\r\n};\r\n\r\nexport const createNotify = ({msg, auth, socket}) => async (dispatch) => {\r\n    try {\r\n        const res = await postDataAPI(`notify`, msg, auth.token);\r\n        socket.emit('createNotify', {\r\n            ...res.data.notify,\r\n            user: {\r\n                username: auth.user.username,\r\n                avatar: auth.user.avatar,\r\n            }\r\n        });\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n};\r\n\r\nexport const removeNotify = ({msg, auth, socket}) => async (dispatch) => {\r\n    try {\r\n        await deleteDataAPI(`notify/${msg.id}?url=${msg.url}`, auth.token);\r\n        socket.emit(\"removeNotify\", msg);\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {error: err.response.data.msg},\r\n        });\r\n    }\r\n};\r\n\r\nexport const getNotifies = (token) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI('notifies', token);\r\n\r\n        dispatch({type: NOTIFY_TYPES.GET_NOTIFIES, payload: res.data.notifies});\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {error: err.response.data.msg},\r\n        });\r\n    }\r\n};\r\n\r\nexport const isReadNotify = ({msg, auth}) => async (dispatch) => {\r\n\r\n    dispatch({type: NOTIFY_TYPES.UPDATE_NOTIFY, payload: {...msg, isRead: true}});\r\n\r\n    try {\r\n        await patchDataAPI(`isReadNotify/${msg._id}`, null, auth.token);\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {error: err.response.data.msg},\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteAllNotifies = (token) => async (dispatch) => {\r\n    dispatch({type: NOTIFY_TYPES.DELETE_ALL_NOTIFICATIONS, payload: []});\r\n\r\n    try {\r\n        await deleteDataAPI(`deleteAllNotify`, token);\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {error: err.response.data.msg},\r\n        });\r\n    }\r\n};\r\n","import {DeleteData, GLOBALTYPES} from \"./globalTypes\";\r\nimport {postDataAPI, getDataAPI, deleteDataAPI} from \"../../utils/fetchData\";\r\n\r\nexport const MESSAGE_TYPES = {\r\n    ADD_USER: \"ADD_USER\",\r\n    ADD_MESSAGE: \"ADD_MESSAGE\",\r\n    GET_CONVERSATIONS: \"GET_CONVERSATIONS\",\r\n    GET_MESSAGES: \"GET_MESSAGES\",\r\n    UPDATE_MESSAGES: 'UPDATE_MESSAGES',\r\n    DELETE_MESSAGES: 'DELETE_MESSAGES',\r\n    DELETE_CONVERSATION: 'DELETE_CONVERSATION',\r\n    CHECK_ONLINE_OFFLINE: 'CHECK_ONLINE_OFFLINE'\r\n};\r\n\r\nexport const addUser = ({user, message}) => async (dispatch) => {\r\n    if (message.users.every(item => item._id !== user._id)) {\r\n        dispatch({type: MESSAGE_TYPES.ADD_USER, payload: {...user, text: '', media: []}});\r\n    }\r\n};\r\n\r\nexport const addMessage = ({msg, auth, socket}) => async (dispatch) => {\r\n\r\n    dispatch({type: MESSAGE_TYPES.ADD_MESSAGE, payload: msg});\r\n    socket.emit('addMessage', msg);\r\n\r\n    try {\r\n        await postDataAPI('message', msg, auth.token)\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const getConversations = ({auth, page = 1}) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI(`conversations?limit=${page * 9}`, auth.token);\r\n        let newArr = [];\r\n        res.data.conversations.forEach(item => {\r\n            item.recipients.forEach(cv => {\r\n                if (cv._id !== auth.user._id) {\r\n                    newArr.push({...cv, text: item.text, media: item.media});\r\n                }\r\n            })\r\n        });\r\n\r\n        dispatch({type: MESSAGE_TYPES.GET_CONVERSATIONS, payload: {newArr, result: res.data.result}});\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\r\n    }\r\n\r\n}\r\n\r\nexport const getMessages = ({auth, id, page = 1}) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token);\r\n\r\n        dispatch({type: MESSAGE_TYPES.GET_MESSAGES, payload: res.data});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {error: err.response.data.msg},\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadMoreMessages = ({auth, id, page = 1}) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token)\r\n        const newData = {...res.data, messages: res.data.messages.reverse()}\r\n\r\n        dispatch({type: MESSAGE_TYPES.UPDATE_MESSAGES, payload: {...newData, _id: id, page}})\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteMessages = ({msg, data, auth}) => async (dispatch) => {\r\n    const newData = DeleteData(data, msg._id)\r\n    dispatch({type: MESSAGE_TYPES.DELETE_MESSAGES, payload: {newData, _id: msg.recipient}})\r\n    try {\r\n        await deleteDataAPI(`message/${msg._id}`, auth.token)\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteConversation = ({auth, id}) => async (dispatch) => {\r\n    dispatch({type: MESSAGE_TYPES.DELETE_CONVERSATION, payload: id})\r\n    try {\r\n        await deleteDataAPI(`conversation/${id}`, auth.token)\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <section className=\"error-container\">\r\n                <span className=\"four\"><span className=\"screen-reader-text\">4</span></span>\r\n                <span className=\"zero\"><span className=\"screen-reader-text\">0</span></span>\r\n                <span className=\"four\"><span className=\"screen-reader-text\">4</span></span>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport NotFound from \"../components/NotFound\";\r\n\r\nconst generatePage = (pageName) => {\r\n    const component = () => require(`../pages/${pageName}`).default;\r\n\r\n    try {\r\n        return React.createElement(component());\r\n    } catch (err) {\r\n        return <NotFound/>;\r\n    }\r\n};\r\n\r\nconst PageRender = () => {\r\n    const {page, id} = useParams();\r\n    const {auth} = useSelector((state) => state);\r\n\r\n    let pageName = \"\";\r\n    if (auth.token) {\r\n        if (id) {\r\n            pageName = `${page}/[id]`;\r\n        } else {\r\n            pageName = `${page}`;\r\n        }\r\n    }\r\n\r\n    return generatePage(pageName);\r\n};\r\n\r\nexport default PageRender;","import React from 'react'\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nconst PrivateRouter = (props) => {\r\n    const firstLogin = localStorage.getItem('firstLogin');\r\n    return firstLogin ? <Route {...props} /> : <Redirect to=\"/\"/>\r\n}\r\n\r\nexport default PrivateRouter;","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loader\">\r\n                <div className=\"inner one\"></div>\r\n                <div className=\"inner two\"></div>\r\n                <div className=\"inner three\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react'\r\n\r\nconst Toast = ({msg, handleShow, bgColor}) => {\r\n    return (\r\n        <div className={`toast toast--${bgColor}`}>\r\n            <div className=\"toast__icon\"></div>\r\n            <div className=\"toast__content\">\r\n                <p className=\"toast__type\">{msg.title}</p>\r\n                <p className=\"toast__message\">{msg.body}</p>\r\n            </div>\r\n            <div className=\"toast__close\" onClick={handleShow} onclose={setTimeout(handleShow, 3000)}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.6 15.6\">\r\n                    <path\r\n                        d=\"M8.9 7.8l6.5-6.5c0.3-0.3 0.3-0.8 0-1.1 -0.3-0.3-0.8-0.3-1.1 0L7.8 6.8 1.3 0.2c-0.3-0.3-0.8-0.3-1.1 0 -0.3 0.3-0.3 0.8 0 1.1l6.5 6.5L0.2 14.4c-0.3 0.3-0.3 0.8 0 1.1 0.1 0.1 0.3 0.2 0.5 0.2s0.4-0.1 0.5-0.2l6.5-6.5 6.5 6.5c0.1 0.1 0.3 0.2 0.5 0.2 0.2 0 0.4-0.1 0.5-0.2 0.3-0.3 0.3-0.8 0-1.1L8.9 7.8z\"/>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toast","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport Toast from \"./Toast\";\r\nimport {GLOBALTYPES} from \"../../redux/actions/globalTypes\";\r\n\r\nconst Alert = () => {\r\n    const {alert} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            {alert.loading && <Loading/>}\r\n\r\n            {alert.error && (\r\n                <Toast\r\n                    msg={{title: \"Thất bại\", body: alert.error}}\r\n                    handleShow={() => dispatch({type: GLOBALTYPES.ALERT, payload: {}})}\r\n                    bgColor=\"red\"\r\n                />\r\n            )}\r\n\r\n            {alert.success && (\r\n                <Toast\r\n                    msg={{title: \"Thành công\", body: alert.success}}\r\n                    handleShow={() => dispatch({type: GLOBALTYPES.ALERT, payload: {}})}\r\n                    bgColor=\"green\"\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Alert;","import {GLOBALTYPES} from \"./globalTypes\";\r\nimport {getDataAPI, deleteDataAPI} from \"../../utils/fetchData\";\r\nimport {createNotify} from \"./notifyAction\";\r\n\r\nexport const ADMIN_TYPES = {\r\n    GET_TOTAL_USERS: \"GET_TOTAL_USERS\",\r\n    GET_TOTAL_POSTS: \"GET_TOTAL_POSTS\",\r\n    GET_TOTAL_COMMENTS: \"GET_TOTAL_COMMENTS\",\r\n    GET_TOTAL_LIKES: \"GET_TOTAL_LIKES\",\r\n    GET_TOTAL_SPAM_POSTS: \"GET_TOTAL_SPAM_POSTS\",\r\n    GET_TOTAL_ACTIVE_USERS: \"GET_TOTAL_ACTIVE_USERS\",\r\n    GET_SPAM_POSTS: \"GET_SPAM_POSTS\",\r\n    LOADING_ADMIN: \"LOADING_ADMIN\",\r\n    DELETE_POST: \"DELETE_POST\",\r\n};\r\n\r\n\r\nexport const getTotalUsers = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: true});\r\n        const res = await getDataAPI(\"get_total_users\", token);\r\n        dispatch({type: ADMIN_TYPES.GET_TOTAL_USERS, payload: res.data});\r\n\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: false});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getTotalPosts = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: true});\r\n        const res = await getDataAPI(\"get_total_posts\", token);\r\n        dispatch({type: ADMIN_TYPES.GET_TOTAL_POSTS, payload: res.data});\r\n\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: false});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getTotalComments = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: true});\r\n        const res = await getDataAPI(\"get_total_comments\", token);\r\n        dispatch({type: ADMIN_TYPES.GET_TOTAL_COMMENTS, payload: res.data});\r\n\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: false});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getTotalLikes = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: true});\r\n        const res = await getDataAPI(\"get_total_likes\", token);\r\n        dispatch({type: ADMIN_TYPES.GET_TOTAL_LIKES, payload: res.data});\r\n\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: false});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const getTotalSpamPosts = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: true});\r\n        const res = await getDataAPI(\"get_total_spam_posts\", token);\r\n        dispatch({type: ADMIN_TYPES.GET_TOTAL_SPAM_POSTS, payload: res.data});\r\n\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: false});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const getSpamPosts = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: true});\r\n        const res = await getDataAPI(\"get_spam_posts\", token);\r\n\r\n        dispatch({type: ADMIN_TYPES.GET_SPAM_POSTS, payload: res.data.spamPosts});\r\n\r\n        dispatch({type: ADMIN_TYPES.LOADING_ADMIN, payload: false});\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteSpamPost = ({post, auth, socket}) => async (dispatch) => {\r\n    dispatch({type: ADMIN_TYPES.DELETE_POST, payload: post});\r\n\r\n    try {\r\n        const res = await deleteDataAPI(\r\n            `delete_spam_posts/${post._id}`,\r\n            auth.token\r\n        );\r\n\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\r\n\r\n        // todo notification\r\n        const msg = {\r\n            id: auth.user._id,\r\n            text: \"Bài viết của bạn bị xoá do vi phạm quy định của chúng tôi\",\r\n            recipients: [post.user._id],\r\n            url: `/profile/${post.user._id}`,\r\n        };\r\n\r\n        dispatch(createNotify({msg, auth, socket}));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const getTotalActiveUsers = ({auth, socket}) => async (dispatch) => {\r\n    try {\r\n        socket.emit('getActiveUsers', auth.user._id);\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};","export default __webpack_public_path__ + \"static/media/pristine.9287f5ce.mp3\";","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { POST_TYPES } from \"./redux/actions/postAction\";\r\nimport { ADMIN_TYPES } from \"./redux/actions/adminAction\";\r\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\r\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\r\nimport { MESSAGE_TYPES } from \"./redux/actions/messageAction\";\r\n\r\nimport audio from \"./assets/audio/pristine.mp3\"\r\n\r\nconst spawnNotification = (body, icon, url, title) => {\r\n    let options = {\r\n        body, icon\r\n    }\r\n    let n = new Notification(title, options);\r\n    n.onclick =  e => {\r\n        e.preventDefault();\r\n        window.open(url, '_blank');\r\n    }\r\n}\r\n\r\nconst SocketClient = () => {\r\n    const { auth, socket, notify } = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const audioRef = useRef();\r\n\r\n    //!connection\r\n    useEffect(() => {\r\n        if (auth.user.role === \"user\") {\r\n            socket.emit(\"joinUser\", auth.user._id);\r\n        } else if (auth.user.role === \"admin\") {\r\n            socket.emit(\"joinAdmin\", auth.user._id);\r\n        }\r\n    }, [socket, auth.user.role, auth.user._id]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"getActiveUsersToClient\", (totalActiveUsers) => {\r\n            dispatch({\r\n                type: ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS,\r\n                payload: totalActiveUsers,\r\n            });\r\n        });\r\n        return () => socket.off(\"getActiveUsersToClient\");\r\n    }, [socket, dispatch]);\r\n\r\n    //!like Post\r\n    useEffect(() => {\r\n        socket.on(\"likeToClient\", (newPost) => {\r\n            dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n        });\r\n        return () => socket.off(\"likeToClient\");\r\n    }, [socket, dispatch]);\r\n\r\n    //!Unlike Post\r\n    useEffect(() => {\r\n        socket.on(\"unLikeToClient\", (newPost) => {\r\n            dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n        });\r\n        return () => socket.off(\"unLikeToClient\");\r\n    }, [socket, dispatch]);\r\n\r\n    //!Comments\r\n    useEffect(() => {\r\n        socket.on(\"createCommentToClient\", (newPost) => {\r\n            dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n        });\r\n        return () => socket.off(\"createCommentToClient\");\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"deleteCommentToClient\", (newPost) => {\r\n            dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n        });\r\n        return () => socket.off(\"deleteCommentToClient\");\r\n    }, [socket, dispatch]);\r\n\r\n    //!Follow\r\n    useEffect(() => {\r\n        socket.on(\"followToClient\", (newUser) => {\r\n            dispatch({ type: GLOBALTYPES.AUTH, payload: { ...auth, user: newUser } });\r\n        });\r\n        return () => socket.off(\"followToClient\");\r\n    }, [socket, dispatch, auth]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"unFollowToClient\", (newUser) => {\r\n            dispatch({\r\n                type: GLOBALTYPES.AUTH,\r\n                payload: { ...auth, user: newUser },\r\n            });\r\n        });\r\n        return () => socket.off(\"unFollowToClient\");\r\n    }, [socket, dispatch, auth]);\r\n\r\n    //!Notifications\r\n    useEffect(() => {\r\n        socket.on(\"createNotifyToClient\", (msg) => {\r\n            dispatch({ type: NOTIFY_TYPES.CREATE_NOTIFY, payload: msg });\r\n\r\n            if (notify.sound) {\r\n                audioRef.current.play();\r\n            }\r\n            spawnNotification(\r\n                msg.user.username + \" \" + msg.text,\r\n                msg.user.avatar,\r\n                msg.url,\r\n                \"CAMPUS CONNECT\"\r\n            );\r\n        });\r\n        return () => socket.off(\"createNotifyToClient\");\r\n    }, [socket, dispatch, notify.sound]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"removeNotifyToClient\", (msg) => {\r\n            dispatch({ type: NOTIFY_TYPES.REMOVE_NOTIFY, payload: msg });\r\n        });\r\n        return () => socket.off(\"removeNotifyToClient\");\r\n    }, [socket, dispatch]);\r\n\r\n    //!Messages\r\n    useEffect(() => {\r\n        socket.on(\"addMessageToClient\", (msg) => {\r\n            dispatch({ type: MESSAGE_TYPES.ADD_MESSAGE, payload: msg });\r\n\r\n        });\r\n        return () => socket.off(\"addMessageToClient\");\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <audio controls ref={audioRef} style={{ display: \"none\" }}>\r\n                <source src={audio} type=\"audio/mp3\" />\r\n            </audio>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SocketClient;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDataAPI} from \"../../utils/fetchData\";\r\nimport {GLOBALTYPES} from \"../../redux/actions/globalTypes\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const { auth } = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!search) return;\r\n\r\n        try {\r\n            const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n            setUsers(res.data.users);\r\n            await history.push({\r\n                pathname: '/search',\r\n                state: { users: users }\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {error: err.response.data.msg},\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setSearch(\"\");\r\n        setUsers([]);\r\n    };\r\n\r\n    return (\r\n        <form className=\"search-container\" onSubmit={handleSearch}>\r\n            <img className=\"search-icon\" src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912691/icon/search_trw2ne.svg\" alt=\"message\"/>\r\n            <input\r\n                type=\"text\"\r\n                className=\"search-bar\"\r\n                placeholder=\"Nhấn enter để tìm kiếm\"\r\n                value={search}\r\n                onChange={(e) =>\r\n                    setSearch(e.target.value.toLowerCase().replace(/ /g, \" \"))\r\n                }\r\n            />\r\n            <img className=\"search-icon--close\" onClick={handleClose} src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\" alt=\"message\" style={search?{visibility: \"visible\"}:{visibility:\"hidden\"}}/>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport Avatar from \"../Avatar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../redux/actions/authAction\";\r\nimport {GLOBALTYPES} from \"../../redux/actions/globalTypes\";\r\n\r\nconst Items = () => {\r\n    const [check, setCheck] = useState(false);\r\n    const {auth, notify} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"header-items--container\">\r\n\r\n            <div className=\"header--items\" style={{marginRight: \"7px\"}}>\r\n                <Link to=\"/message\" style={{marginTop: \"5px\"}}>\r\n                    <img className=\"header-items--item\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626911007/icon/messenger_mdvyiu.svg\"\r\n                         alt=\"message\"/>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"header--items\" style={{marginRight: \"7px\", marginLeft: \"7px\"}}>\r\n                <Link style={{marginTop: \"5px\"}}>\r\n                    <img className=\"header-items--item\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626911353/icon/notification_pdi7ow.svg\"\r\n                         alt=\"message\"/>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"header--items\" style={{marginRight: \"7px\", marginLeft: \"7px\"}}>\r\n                <Link style={{marginTop: \"5px\"}}>\r\n                    <img className=\"header-items--item\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627072775/icon/night_mc6qyb.svg\"\r\n                         alt=\"message\"/>\r\n                </Link>\r\n            </div>\r\n\r\n            <input type=\"checkbox\" className=\"header--checkbox\" checked={check}/>\r\n            <div className=\"header--items header--dropdown_menu\"\r\n                 style={{marginLeft: \"7px\"}}\r\n                 onClick={() => setCheck(!check)}>\r\n                <Avatar src={auth.user.avatar} size=\"medium-avatar\"/>\r\n                <img className=\"header-items--item_arrow\"\r\n                     src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626918789/icon/down-arrow_xdmdlc.svg\"\r\n                     alt=\"message\"/>\r\n            </div>\r\n            <ul className=\"header--ul\">\r\n                <li className=\"header--li\">\r\n                    <Link\r\n                        className=\"header--li_profile\"\r\n                        to={`/profile/${auth.user._id}`}\r\n                    >\r\n                        <Avatar src={auth.user.avatar} size=\"big-avatar\"/>\r\n                        <div>\r\n                            <strong>{auth.user.username}</strong>\r\n                            <span>Xem trang cá nhân</span>\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"header--li\" onClick={() => dispatch({type: GLOBALTYPES.CHANGE_PASSWORD, payload: true})}>\r\n                    <div className=\"header--li_logout\">\r\n                        <img className=\"header-items--item_logout\"\r\n                             src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627688858/icon/key_wsxvsj.svg\"\r\n                             alt=\"message\"/>\r\n                        <span>Đổi mật khẩu</span>\r\n                    </div>\r\n                </li>\r\n                <li className=\"header--li\" style={{borderBottom: \"none\"}} onClick={() => dispatch(logout())}>\r\n                    <Link className=\"header--li_logout\" to=\"/auth\">\r\n                        <img className=\"header-items--item_logout\"\r\n                             src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626926472/icon/logout_mqcubj.svg\"\r\n                             alt=\"message\"/>\r\n                        <span>Đăng xuất</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Items","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getPosts} from \"../../redux/actions/postAction\";\r\nimport {getSuggestions} from \"../../redux/actions/suggestionsAction\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport Search from \"./Search\";\r\nimport Items from \"./Items\";\r\n\r\nconst Header = () => {\r\n    const {auth} = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleRefreshHome = () => {\r\n        window.scrollTo({top: 0})\r\n        dispatch(getPosts(auth.token));\r\n        dispatch(getSuggestions(auth.token));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\" className=\"header-logo\" onClick={handleRefreshHome}>\r\n                <img className=\"header-logo--img\" alt=\"logo\" src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626886904/logo_nwimwg.png\" ></img>\r\n                <span className=\"header-logo--name\">Social Media</span>\r\n            </Link>\r\n            <div className=\"header-search\">\r\n                <Search />\r\n            </div>\r\n            <div className=\"header-items\">\r\n                <Items />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {GLOBALTYPES} from '../redux/actions/globalTypes'\r\nimport {createPost, updatePost} from '../redux/actions/postAction'\r\nimport {imageShow, videoShow} from '../utils/mediaShow'\r\n\r\nconst StatusModal = () => {\r\n    const {auth, theme, status, socket} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const [content, setContent] = useState(\"\");\r\n    const [images, setImages] = useState([]);\r\n    const [stream, setStream] = useState(false);\r\n    const videoRef = useRef();\r\n    const refCanvas = useRef();\r\n    const [tracks, setTracks] = useState(\"\");\r\n\r\n    const handleChangeImages = (e) => {\r\n        const files = [...e.target.files];\r\n        let err = \"\";\r\n        let newImages = [];\r\n\r\n        files.forEach((file) => {\r\n            if (!file) return (err = \"Thư mục không tồn tại1\");\r\n\r\n            if (file.size > 1024 * 1024 * 5) {\r\n                return (err = \"Ảnh/Video có kích thước lớn hơn 5Mb\");\r\n            }\r\n\r\n            return newImages.push(file);\r\n        });\r\n\r\n        if (err) dispatch({type: GLOBALTYPES.ALERT, payload: {error: err}});\r\n        setImages([...images, ...newImages]);\r\n    };\r\n\r\n    const deleteImages = (index) => {\r\n        const newArr = [...images];\r\n        newArr.splice(index, 1);\r\n        setImages(newArr);\r\n    };\r\n\r\n    const handleStream = () => {\r\n        setStream(true);\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            navigator.mediaDevices\r\n                .getUserMedia({video: true})\r\n                .then((mediaStream) => {\r\n                    videoRef.current.srcObject = mediaStream;\r\n                    videoRef.current.play();\r\n\r\n                    const track = mediaStream.getTracks();\r\n                    setTracks(track[0]);\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    };\r\n\r\n    const handleCapture = () => {\r\n        const width = videoRef.current.clientWidth;\r\n        const height = videoRef.current.clientHeight;\r\n\r\n        refCanvas.current.setAttribute(\"width\", width);\r\n        refCanvas.current.setAttribute(\"height\", height);\r\n\r\n        const ctx = refCanvas.current.getContext(\"2d\");\r\n        ctx.drawImage(videoRef.current, 0, 0, width, height);\r\n        let URL = refCanvas.current.toDataURL();\r\n        setImages([...images, {camera: URL}]);\r\n    };\r\n\r\n    const handleStopStream = () => {\r\n        if (tracks) {\r\n            tracks.stop();\r\n            setStream(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (images.length > 5)\r\n            return dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {error: \"Vui lòng không chọn quá 5 ảnh/video\"},\r\n            });\r\n\r\n        if (images.length === 0)\r\n            return dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {error: \"Vui lòng chọn ít nhất 1 ảnh/video\"},\r\n            });\r\n\r\n        if (status.onEdit) {\r\n            dispatch(updatePost({content, images, auth, status}));\r\n        } else {\r\n            dispatch(createPost({content, images, auth, socket}));\r\n        }\r\n\r\n        setContent(\"\");\r\n        setImages([]);\r\n        if (tracks) tracks.stop();\r\n        dispatch({type: GLOBALTYPES.STATUS, payload: false});\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (status.onEdit) {\r\n            setContent(status.content);\r\n            setImages(status.images);\r\n        }\r\n    }, [status]);\r\n\r\n    return (\r\n        <div className=\"status-modal\">\r\n            <form className=\"status-modal_form\" onSubmit={handleSubmit}>\r\n                <div className=\"status-modal_header\">\r\n                    <span className=\"status-modal_header-title\">Tạo bài viết</span>\r\n                    <img\r\n                        className=\"search-icon--close\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                        alt=\"message\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: GLOBALTYPES.STATUS,\r\n                                payload: false,\r\n                            });\r\n                            handleStopStream();\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"status-modal_body\">\r\n                    <textarea\r\n                        className=\"status-modal_body-textArea\"\r\n                        name=\"content\"\r\n                        value={content}\r\n                        placeholder={\"Bạn đang nghĩ gì thế?\"}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                    />\r\n\r\n                    <div className=\"status-modal_body-images\">\r\n                        {images.map((img, index) => (\r\n                            <div key={index} className=\"status-modal_body-image\">\r\n                                {img.camera ? (\r\n                                    imageShow(img.camera, theme)\r\n                                ) : img.url ? (\r\n                                    <>\r\n                                        {img.url.match(/video/i)\r\n                                            ? videoShow(img.url, theme)\r\n                                            : imageShow(img.url, theme)}\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        {img.type.match(/video/i)\r\n                                            ? videoShow(\r\n                                                URL.createObjectURL(img),\r\n                                                theme\r\n                                            )\r\n                                            : imageShow(\r\n                                                URL.createObjectURL(img),\r\n                                                theme\r\n                                            )}\r\n                                    </>\r\n                                )}\r\n                                <span\r\n                                    className=\"status-modal_body-imageClose\"\r\n                                    onClick={() => deleteImages(index)}\r\n                                >\r\n                                  <img\r\n                                      className=\"search-icon--close\"\r\n                                      src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                                      alt=\"close\"\r\n                                  />\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {stream && (\r\n                        <div className=\"status-modal_body-stream\">\r\n                            <video\r\n                                autoPlay\r\n                                muted\r\n                                ref={videoRef}\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                style={{filter: theme ? \"invert(1)\" : \"invert(0)\"}}\r\n                            />\r\n\r\n                            <span className=\"status-modal_body-streamClose\" onClick={handleStopStream}>\r\n                                 <img\r\n                                     className=\"search-icon--close\"\r\n                                     src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                                     alt=\"close\"\r\n                                 />\r\n                            </span>\r\n                            <canvas ref={refCanvas} style={{display: \"none\"}}/>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"status-modal_body-icons\">\r\n                        {stream ? (\r\n                            <img\r\n                                className=\"status-modal_body-icon\"\r\n                                src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627442036/icon/camera_daaon8.svg\"\r\n                                alt=\"message\"\r\n                                onClick={handleCapture}\r\n                            />\r\n                        ) : (\r\n                            <>\r\n                                <img\r\n                                    className=\"status-modal_body-icon\"\r\n                                    src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627442036/icon/camera_daaon8.svg\"\r\n                                    alt=\"message\"\r\n                                    onClick={handleStream}\r\n                                />\r\n                                <div>\r\n                                    <label htmlFor=\"file\">\r\n                                        <img\r\n                                            className=\"status-modal_body-icon\"\r\n                                            src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627442469/icon/picture_sphbkd.svg\"\r\n                                            alt=\"message\"\r\n                                        />\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        name=\"file\"\r\n                                        id=\"file\"\r\n                                        multiple\r\n                                        accept=\"image/* video/mp4\"\r\n                                        onChange={handleChangeImages}\r\n                                        style={{display: \"none\"}}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"status-modal_submit\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    disabled={content ? false : true}\r\n                >\r\n                    Đăng\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatusModal\r\n","import React  from \"react\";\r\nimport Avatar from \"../Avatar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LeftSide = () => {\r\n    const {auth} = useSelector(state => state)\r\n    return(\r\n        <div className=\"left-side\">\r\n            <Link to={`/profile/${auth.user._id}`} className=\"left-side_avatar\">\r\n                <Avatar src={auth.user.avatar} size=\"big-avatar\" />\r\n                <div className=\"left-side_avatar-info\">\r\n                    <strong>{auth.user.fullName}</strong>\r\n                    <span>@{auth.user.username}</span>\r\n                </div>\r\n            </Link>\r\n            <ul className=\"left-side_ul\">\r\n                <li>\r\n                    <Link className=\"left-side_link\">\r\n                        <img className=\"left-side_item\"\r\n                             src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626972126/icon/friends_u2pjpg.svg\"\r\n                             alt=\"message\"/>\r\n                        <span>Bạn bè</span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <img className=\"left-side_item\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626972440/icon/networking_dvzt4z.svg\"\r\n                         alt=\"message\"/>\r\n                    <span>Nhóm</span>\r\n                </li>\r\n                <li>\r\n                    <Link to={`/discover`} className=\"left-side_link\">\r\n                        <img className=\"left-side_item\"\r\n                             src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626972686/icon/compass_xjczoa.svg\"\r\n                             alt=\"message\"/>\r\n                        <span>Khám phá</span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <img className=\"left-side_item\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626972877/icon/video_z4in4a.svg\"\r\n                         alt=\"message\"/>\r\n                    <span>Video</span>\r\n                </li>\r\n                <li>\r\n                    <img className=\"left-side_item\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626972933/icon/statistics_dnm5ot.svg\"\r\n                         alt=\"message\"/>\r\n                    <span>Thống kê</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSide;","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {GLOBALTYPES} from '../redux/actions/globalTypes'\r\nimport {changePassword} from \"../redux/actions/authAction\";\r\n\r\nconst StatusModal = () => {\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [cnfNewPassword, setCnfNewPassword] = useState(\"\");\r\n    const {auth} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(changePassword({oldPassword, newPassword, cnfNewPassword, auth}));\r\n        dispatch({type: GLOBALTYPES.CHANGE_PASSWORD, payload: false});\r\n    };\r\n\r\n    return (\r\n        <div className=\"change-password\" onSubmit={handleSubmit}>\r\n            <form className=\"change-password_form\">\r\n                <div className=\"change-password_header\">\r\n                    <span className=\"change-password_header-title\">Đổi mật khẩu</span>\r\n                    <img\r\n                        className=\"search-icon--close\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                        alt=\"close\"\r\n                        onClick={() => dispatch({type: GLOBALTYPES.CHANGE_PASSWORD, payload: false})}\r\n                    />\r\n                </div>\r\n                <div className=\"change-password_body\">\r\n                    <div className=\"change-password_body-items\">\r\n                        <label htmlFor=\"oldPassword\" className=\"change-password_body-items-label\">Mật khẩu hiện tại</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"oldPassword\"\r\n                            name=\"oldPassword\"\r\n                            value={oldPassword}\r\n                            autoFocus\r\n                            onChange={(e) => setOldPassword(e.target.value)}\r\n                            className=\"change-password_body-items-input\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"change-password_body-items\">\r\n                        <label htmlFor=\"oldPassword\" className=\"change-password_body-items-label\">Mật khẩu mới</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"newPassword\"\r\n                            name=\"newPassword\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            className=\"change-password_body-items-input\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"change-password_body-items\">\r\n                        <label htmlFor=\"oldPassword\" className=\"change-password_body-items-label\">Xác nhận mật khẩu</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"cnfNewPassword\"\r\n                            name=\"cnfNewPassword\"\r\n                            value={cnfNewPassword}\r\n                            onChange={(e) => setCnfNewPassword(e.target.value)}\r\n                            className=\"change-password_body-items-input\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"change-password_submit\" type=\"submit\" disabled={oldPassword && newPassword && cnfNewPassword ? false : true}>\r\n                    Cập nhật\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatusModal\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {GLOBALTYPES} from \"../redux/actions/globalTypes\";\r\n\r\nimport {checkImage} from \"../utils/imageUpload\";\r\nimport {updateProfileUser} from \"../redux/actions/profileAction\";\r\n\r\n\r\nconst EditProfileModal = () => {\r\n    const initialState = {\r\n        fullName: \"\",\r\n        mobile: \"\",\r\n        address: \"\",\r\n        website: \"\",\r\n        story: \"\",\r\n        gender: \"\",\r\n    };\r\n    const [userData, setUserData] = useState(initialState);\r\n    const {fullName, website, story, gender} = userData;\r\n    const {auth} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setUserData(auth.user);\r\n    }, [auth.user]);\r\n\r\n    const handleInput = (e) => {\r\n        const {name, value} = e.target;\r\n        setUserData({...userData, [name]: value});\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(updateProfileUser({userData, auth}));\r\n    };\r\n\r\n    return (\r\n        <div className=\"edit-profile\">\r\n            <form className=\"edit-profile_form\" onSubmit={handleSubmit}>\r\n                <div className=\"edit-profile_header\">\r\n                    <span className=\"edit-profile_header-title\">Chỉnh sửa trang cá nhân</span>\r\n                    <img\r\n                        className=\"search-icon--close\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                        alt=\"message\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: GLOBALTYPES.EDIT_PROFILE,\r\n                                payload: false,\r\n                            });\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"edit-profile_body\">\r\n                    <div className=\"edit-profile_body-fullName\">\r\n                        <label className=\"edit-profile_body-label\" htmlFor=\"fullName\">Tên của bạn</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"edit-profile_body-input\"\r\n                            id=\"fullName\"\r\n                            name=\"fullName\"\r\n                            value={fullName}\r\n                            placeholder=\"Tên của bạn\"\r\n                            onChange={handleInput}\r\n                        />\r\n                        {\r\n                            fullName.length <= 25 ?\r\n                                <small className=\"edit-profile_body-countName\">\r\n                                    {fullName.length}/25\r\n                                </small> :\r\n                                <small className=\"edit-profile_body-countName\" style={{color: \"red\"}}>\r\n                                    {fullName.length}/25\r\n                                </small>\r\n                        }\r\n                    </div>\r\n                    <div className=\"edit-profile_body-fullName\">\r\n                        <label className=\"edit-profile_body-label\" htmlFor=\"fullName\">Website</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"edit-profile_body-input\"\r\n                            id=\"website\"\r\n                            name=\"website\"\r\n                            value={website}\r\n                            placeholder=\"Website\"\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"edit-profile_body-fullName\">\r\n                        <label className=\"edit-profile_body-label\" htmlFor=\"fullName\">Story</label>\r\n                        <textarea\r\n                            cols=\"30\"\r\n                            rows=\"4\"\r\n                            type=\"text\"\r\n                            className=\"edit-profile_body-input\"\r\n                            id=\"story\"\r\n                            name=\"story\"\r\n                            value={story}\r\n                            onChange={handleInput}\r\n                        />\r\n\r\n                        {\r\n                            story.length <= 200 ?\r\n                                <small className=\"edit-profile_body-countName\">\r\n                                    {story.length}/200\r\n                                </small> :\r\n                                <small className=\"edit-profile_body-countName\" style={{color: \"red\"}}>\r\n                                    {story.length}/200\r\n                                </small>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"edit-profile_body-fullName\">\r\n                    <label className=\"edit-profile_body-label\" htmlFor=\"gender\">Giới tính</label>\r\n                    <div className=\"edit-profile_body-radioButton\">\r\n                        <input type=\"radio\" id=\"editProfileMale\"\r\n                               name=\"gender\" value=\"male\" onChange={handleInput}\r\n                               checked={userData.gender === \"male\" ? true : false}\r\n                        />\r\n                        <label htmlFor=\"editProfileMale\">Nam</label>\r\n\r\n                        <input type=\"radio\" id=\"editProfileFemale\"\r\n                               name=\"gender\" value=\"female\" onChange={handleInput}\r\n                               checked={userData.gender === \"female\" ? true : false}/>\r\n                        <label htmlFor=\"editProfileFemale\">Nữ</label>\r\n\r\n                        <input type=\"radio\" id=\"editProfileOther\"\r\n                               name=\"gender\" value=\"other\" onChange={handleInput}\r\n                               checked={userData.gender === \"other\" ? true : false}/>\r\n                        <label htmlFor=\"editProfileOther\">Khác</label>\r\n                    </div>\r\n                </div>\r\n                <button className=\"edit-profile_submit\" type=\"submit\">\r\n                    Cập nhật\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfileModal;","import {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport io from 'socket.io-client'\n\nimport PageRender from \"./customRouter/PageRender\";\nimport PrivateRouter from \"./customRouter/PrivateRouter\";\nimport Home from \"./pages/home\";\nimport Auth from \"./pages/auth\";\n\nimport Alert from \"./components/alert/Alert\";\nimport {refreshToken} from \"./redux/actions/authAction\";\nimport {GLOBALTYPES} from \"./redux/actions/globalTypes\";\nimport SocketClient from \"./SocketClient\";\nimport AdminDashboard from \"./pages/admin\";\nimport Header from \"./components/header/Header\";\nimport StatusModal from \"./components/StatusModal\";\nimport {getPosts} from \"./redux/actions/postAction\";\nimport {getNotifies} from \"./redux/actions/notifyAction\";\nimport {getSuggestions} from \"./redux/actions/suggestionsAction\";\nimport moment from \"moment\";\nimport 'moment/locale/vi';\nimport LeftSide from \"./components/sidebar/LeftSide\";\nimport ChangePasswordModal from \"./components/ChangePasswordModal\";\nimport EditProfileModal from \"./components/EditProfileModal\";\n\nfunction App() {\n    const {auth, status, modal, userType, changePassword, editProfile} = useSelector((state) => state);\n\n    const dispatch = useDispatch();\n\n    // Custom moment.js Vietnamese\n    useEffect(()=>{\n        moment.locale('vi');\n        moment.updateLocale('vi', {\n            longDateFormat: {\n                LLLL: \" LT dddd, Do/MM/YYYY\",\n            },\n            weekdays: [\"Chủ nhật\",\"Thứ Hai\",\"Thứ Ba\",\"Thứ Tư\",\"Thứ Năm\",\"Thứ Sáu\",\"Thứ Bảy\"]\n        });\n    });\n\n    useEffect(() => {\n        dispatch(refreshToken());\n\n        const socket = io();\n        dispatch({type: GLOBALTYPES.SOCKET, payload: socket})\n        return () => socket.close()\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (auth.token) {\n            dispatch(getPosts(auth.token));\n            dispatch(getSuggestions(auth.token));\n            dispatch(getNotifies(auth.token));\n        }\n    }, [dispatch, auth.token]);\n\n    return (\n        <Router>\n            <Alert/>\n            <input type=\"checkbox\" id=\"theme\"/>\n            <div className=\"App\">\n                <div className=\"main\">\n                    {auth.token && <SocketClient/>}\n                    {status && <StatusModal/>}\n                    {changePassword && <ChangePasswordModal/>}\n                    {editProfile && <EditProfileModal/>}\n                    {userType === \"user\" && auth.token && <Header/>}\n                    {userType === \"user\" && auth.token && <LeftSide/>}\n\n                    <Route\n                        exact\n                        path=\"/\"\n                        component={\n                            userType === \"user\" ? auth.token ? Home : Auth\n                                : auth.token ? AdminDashboard : Auth\n                        }\n                    />\n                    {userType === \"user\" && (\n                        <>\n                            <PrivateRouter exact path=\"/:page\" component={PageRender}/>\n                            <PrivateRouter exact path=\"/:page/:id\" component={PageRender}/>\n                        </>\n                    )}\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GLOBALTYPES } from '../actions/globalTypes';\n\n\nconst initialState = {\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case GLOBALTYPES.AUTH:\n        return action.payload;\n\n      default:\n        return state;\n    }\n}\n\nexport default authReducer;","import { GLOBALTYPES } from \"../actions/globalTypes\";\r\n\r\nconst userTypeReducer = (state = \"user\", action) => {\r\n  switch (action.type) {\r\n    case GLOBALTYPES.USER_TYPE:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userTypeReducer;\r\n","import { GLOBALTYPES } from \"../actions/globalTypes\";\n\nconst initialState = {};\n\nconst alertReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GLOBALTYPES.ALERT:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;\n","import { GLOBALTYPES } from \"../actions/globalTypes\";\n\nconst initialState = false;\n\nconst themeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GLOBALTYPES.THEME:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import { PROFILE_TYPES } from \"../actions/profileAction\";\nimport { EditData } from '../actions/globalTypes';\n\nconst initialState = {\n  loading: false,\n  ids:[],\n  users: [],\n  posts: []\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PROFILE_TYPES.LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    case PROFILE_TYPES.GET_USER:\n      return {\n        ...state,\n        users: [...state.users, action.payload.user],\n      };\n\n    case PROFILE_TYPES.FOLLOW:\n      return {\n        ...state,\n        users: EditData(state.users, action.payload._id, action.payload),\n      };\n\n    case PROFILE_TYPES.UNFOLLOW:\n      return {\n        ...state,\n        users: EditData(state.users, action.payload._id, action.payload),\n      };\n\n    case PROFILE_TYPES.GET_ID:\n      return {\n        ...state,\n        ids: [...state.ids, action.payload],\n      };\n\n    case PROFILE_TYPES.GET_POSTS:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n      };\n\n    case PROFILE_TYPES.UPDATE_POST:\n      return {\n        ...state,\n        posts: EditData(state.posts, action.payload._id, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\n\nexport default profileReducer;","import { GLOBALTYPES } from \"../actions/globalTypes\";\n\nconst statusReducer = (state = false, action) => {\n  switch (action.type) {\n    case GLOBALTYPES.STATUS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default statusReducer;\n","import { POST_TYPES } from \"../actions/postAction\";\nimport { EditData, DeleteData } from \"../actions/globalTypes\";\n\nconst initialState = {\n    loading: false,\n    posts: [],\n    result: 0,\n    page:2,\n\n}\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_TYPES.CREATE_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts],\n      };\n\n    case POST_TYPES.LOADING_POST:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    case POST_TYPES.GET_POSTS:\n      return {\n        ...state,\n        posts: action.payload.posts,\n        result: action.payload.result,\n        page: action.payload.page,\n      };\n\n    case POST_TYPES.UPDATE_POST:\n      return {\n        ...state,\n        posts: EditData(state.posts, action.payload._id, action.payload),\n      };\n\n    case POST_TYPES.DELETE_POST:\n      return {\n        ...state,\n        posts: DeleteData(state.posts, action.payload._id),\n      };\n\n    case POST_TYPES.REPORT_POST:\n      return {\n        ...state,\n        posts: EditData(state.posts, action.payload._id, action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import { GLOBALTYPES } from \"../actions/globalTypes\";\n\nconst initialState = false;\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GLOBALTYPES.MODAL:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import { POST_TYPES } from \"../actions/postAction\";\nimport { EditData } from \"../actions/globalTypes\";\n\n\n\nconst detailPostReducer = (state = [], action) => {\n  switch (action.type) {\n    case POST_TYPES.GET_POST:\n      return [...state, action.payload];\n\n    case POST_TYPES.UPDATE_POST:\n      return EditData(state, action.payload._id, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default detailPostReducer;\n","import { ADMIN_TYPES } from \"../actions/adminAction\";\r\nimport { DeleteData } from \"../actions/globalTypes\";\r\n\r\nconst initialState = {\r\n    total_users: 0,\r\n    total_posts: 0,\r\n    total_comments: 0,\r\n    total_likes: 0,\r\n    total_active_users: 0,\r\n    total_spam_posts: 0,\r\n    spam_posts : []\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_TYPES.GET_TOTAL_USERS:\r\n      return {\r\n        ...state,\r\n        total_users: action.payload.total_users,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_POSTS:\r\n      return {\r\n        ...state,\r\n        total_posts: action.payload.total_posts,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_COMMENTS:\r\n      return {\r\n        ...state,\r\n        total_comments: action.payload.total_comments,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_LIKES:\r\n      return {\r\n        ...state,\r\n        total_likes: action.payload.total_likes,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_SPAM_POSTS:\r\n      return {\r\n        ...state,\r\n        total_spam_posts: action.payload.total_spam_posts,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS:\r\n      return {\r\n        ...state,\r\n        total_active_users: action.payload,\r\n      };\r\n\r\n    case ADMIN_TYPES.LOADING_ADMIN:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case ADMIN_TYPES.GET_SPAM_POSTS:\r\n      return {\r\n        ...state,\r\n        spam_posts: [...action.payload],\r\n      };\r\n    case ADMIN_TYPES.DELETE_POST:\r\n      return {\r\n        ...state,\r\n        spam_posts: DeleteData(state.spam_posts, action.payload._id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { DISCOVER_TYPES } from \"../actions/discoverAction\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    posts: [],\r\n    result: 9,\r\n    page: 2,\r\n    firstLoad: false,\r\n};\r\n\r\nconst discoverReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DISCOVER_TYPES.LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case DISCOVER_TYPES.GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.posts,\r\n        result: action.payload.result,\r\n        firstLoad: true,\r\n      };\r\n\r\n    case DISCOVER_TYPES.UPDATE_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [...action.payload.posts],\r\n        result: action.payload.result,\r\n        page: state.page + 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default discoverReducer;\r\n","import { SUGGEST_TYPES } from \"../actions/suggestionsAction\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    users: [],\r\n};\r\n\r\nconst suggestionsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SUGGEST_TYPES.LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case SUGGEST_TYPES.GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default suggestionsReducer;\r\n","import { GLOBALTYPES } from \"../actions/globalTypes\";\r\n\r\n\r\n\r\nconst socketReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case GLOBALTYPES.SOCKET:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default socketReducer;\r\n","import { NOTIFY_TYPES } from \"../actions/notifyAction\";\r\nimport { EditData } from \"../actions/globalTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: [],\r\n  sound: false,\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState , action) => {\r\n  switch (action.type) {\r\n    case NOTIFY_TYPES.GET_NOTIFIES:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n\r\n    case NOTIFY_TYPES.CREATE_NOTIFY:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n      };\r\n\r\n    case NOTIFY_TYPES.UPDATE_NOTIFY:\r\n      return {\r\n        ...state,\r\n        data: EditData(state.data, action.payload._id, action.payload),\r\n      };\r\n\r\n    case NOTIFY_TYPES.UPDATE_SOUND:\r\n      return {\r\n        ...state,\r\n        sound: action.payload,\r\n      };\r\n\r\n    case NOTIFY_TYPES.REMOVE_NOTIFY:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(\r\n          (item) =>\r\n            item.id !== action.payload.id || item.url !== action.payload.url\r\n        ),\r\n      };\r\n\r\n    case NOTIFY_TYPES.DELETE_ALL_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { MESSAGE_TYPES } from \"../actions/messageAction\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    resultUsers: 0,\r\n    data: [],\r\n    resultData: 0,\r\n    firstLoad: false \r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MESSAGE_TYPES.ADD_USER:\r\n      return {\r\n        ...state,\r\n        users: [...state.data, action.payload],\r\n      };\r\n\r\n    case MESSAGE_TYPES.ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload.recipient ||\r\n          user._id === action.payload.sender\r\n            ? {\r\n                ...user,\r\n                text: action.payload.text,\r\n                media: action.payload.media,\r\n              }\r\n            : user\r\n        ),\r\n      };\r\n\r\n    case MESSAGE_TYPES.GET_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.newArr,\r\n        resultUsers: action.payload.result,\r\n        firstLoad: true\r\n      };\r\n\r\n    case MESSAGE_TYPES.GET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: action.payload.messages.reverse(),\r\n        resultData: action.payload.result,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n","import { GLOBALTYPES } from \"../actions/globalTypes\";\r\n\r\n\r\nconst changePasswordReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case GLOBALTYPES.CHANGE_PASSWORD:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default changePasswordReducer;","import { GLOBALTYPES } from \"../actions/globalTypes\";\r\n\r\n\r\nconst editProfileReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case GLOBALTYPES.EDIT_PROFILE:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default editProfileReducer;","import { combineReducers } from 'redux';\n\nimport auth from './authReducer';\nimport userType from './userTypeReducer';\nimport alert from './alertReducer';\nimport theme from './themeReducer';\nimport profile from './profileReducer';\nimport status from './statusReducer';\nimport homePosts from './postReducer';\nimport modal from './modalReducer';\nimport detailPost from \"./detailPostReducer\";\nimport admin from \"./adminReducer\";\nimport discover from \"./discoverReducer\";\nimport suggestions from \"./suggestionsReducer\";\nimport socket from \"./socketReducer\";\nimport notify from \"./notifyReducer\";\nimport message from \"./messageReducer\";\nimport changePassword from \"./changePasswordReducer\"\nimport editProfile from \"./editProfileReducer\"\n\nexport default combineReducers({\n  auth,\n  alert,\n  theme,\n  profile,\n  status,\n  homePosts,\n  modal,\n  detailPost,\n  userType,\n  admin,\n  discover,\n  suggestions,\n  socket,\n  notify,\n  message,\n  changePassword,\n  editProfile,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers/index';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore( rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n\nconst DataProvider = ({children}) => {\n    return(\n        <Provider store={store}>\n            {children}\n        </Provider>\n    )\n}\n\nexport default DataProvider;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./assets/styles/index.css\"\n\nimport DataProvider from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <DataProvider>\n          <App />\n      </DataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","import React from \"react\"\r\n\r\nconst Avatar = ({src, size}) => {\r\n    return (\r\n        <img\r\n            src={src}\r\n            alt=\"Avatar\"\r\n            className={size}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Avatar;","import {GLOBALTYPES, DeleteData} from \"./globalTypes\";\nimport {getDataAPI, patchDataAPI} from \"../../utils/fetchData\";\nimport {imageUpload} from \"../../utils/imageUpload\";\nimport {createNotify, removeNotify} from \"./notifyAction\";\n\nexport const PROFILE_TYPES = {\n    LOADING: \"LOADING_PROFILE\",\n    GET_USER: \"GET_PROFILE_USER\",\n    FOLLOW: \"FOLLOW\",\n    UNFOLLOW: \"UNFOLLOW\",\n    GET_ID: \"GET_PROFILE_ID\",\n    GET_POSTS: \"GET_PROFILE_POSTS\",\n    UPDATE_POST: \"UPDATE_PROFILE_POSTS\",\n};\n\n\nexport const getProfileUsers = ({id, auth}) => async (dispatch) => {\n\n    dispatch({type: PROFILE_TYPES.GET_ID, payload: id})\n\n    try {\n        dispatch({type: PROFILE_TYPES.LOADING, payload: true});\n        const res = getDataAPI(`/user/${id}`, auth.token);\n\n        const res1 = getDataAPI(`/user_posts/${id}`, auth.token);\n\n        const users = await res;\n        const posts = await res1;\n\n        dispatch({type: PROFILE_TYPES.GET_USER, payload: users.data});\n        dispatch({type: PROFILE_TYPES.GET_POSTS, payload: {...posts.data, _id: id, page: 2}});\n\n        dispatch({type: PROFILE_TYPES.LOADING, payload: false});\n\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\n    }\n}\n\n\nexport const updateProfileUser = ({userData, avatar, auth}) => async (dispatch) => {\n    if (!userData.fullName) {\n        return dispatch({type: GLOBALTYPES.ALERT, payload: {error: \"Nhập tên\"}})\n    }\n\n    if (userData.fullName.length > 25) {\n        return dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Tên quá dài\"},\n        });\n    }\n\n    if (userData.story.length > 200) {\n        return dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Tiểu sử quá dài\"},\n        });\n    }\n\n    try {\n        let media;\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {loading: true}\n        });\n\n        if (avatar) {\n            media = await imageUpload([avatar]);\n        }\n\n        const res = await patchDataAPI(\"user\", {\n            ...userData,\n            avatar: avatar ? media[0].url : auth.user.avatar\n        }, auth.token);\n\n        dispatch({\n            type: GLOBALTYPES.AUTH,\n            payload: {\n                ...auth,\n                user: {\n                    ...auth.user,\n                    ...userData,\n                    avatar: avatar ? media[0].url : auth.user.avatar,\n                },\n            },\n        });\n\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {success: res.data.msg},\n        });\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const follow = ({users, user, auth, socket}) => async (dispatch) => {\n    let newUser;\n    if (users.every(item => item._id !== user._id)) {\n        newUser = {...user, followers: [...user.followers, auth.user]};\n    } else {\n        users.forEach(item => {\n            if (item._id === user._id) {\n                newUser = {...item, followers: [...item.followers, auth.user]};\n            }\n        })\n    }\n\n    dispatch({type: PROFILE_TYPES.FOLLOW, payload: newUser});\n    dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: {...auth, user: {...auth.user, following: [...auth.user.following, newUser]}}\n    });\n\n\n    try {\n        const res = await patchDataAPI(\n            `/user/${user._id}/follow`,\n            null,\n            auth.token\n        );\n        // todo socket\n        socket.emit(\"follow\", res.data.newUser);\n\n        // todo notification\n        const msg = {\n            id: auth.user._id,\n            text: \"Đã theo dõi bạn\",\n            recipients: [newUser._id],\n            url: `/profile/${auth.user._id}`,\n        };\n\n        dispatch(createNotify({msg, auth, socket}));\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const unfollow = ({users, user, auth, socket}) => async (dispatch) => {\n\n    let newUser;\n    if (users.every((item) => item._id !== user._id)) {\n        newUser = {\n            ...user,\n            followers: DeleteData(user.followers, auth.user._id),\n        };\n    } else {\n        users.forEach((item) => {\n            if (item._id === user._id) {\n                newUser = {\n                    ...item,\n                    followers: DeleteData(item.followers, auth.user._id),\n                };\n            }\n        });\n    }\n\n    dispatch({type: PROFILE_TYPES.UNFOLLOW, payload: newUser});\n\n    dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: {\n            ...auth,\n            user: {\n                ...auth.user,\n                following: DeleteData(auth.user.following, newUser._id)\n            },\n        },\n    });\n\n\n    try {\n        const res = await patchDataAPI(\n            `/user/${user._id}/unfollow`,\n            null,\n            auth.token\n        );\n\n        // todo socket\n        socket.emit(\"unFollow\", res.data.newUser);\n\n        // todo notification\n        const msg = {\n            id: auth.user._id,\n            text: \"Đã theo dõi bạn\",\n            recipients: [newUser._id],\n            url: `/profile/${auth.user._id}`,\n        };\n\n        dispatch(removeNotify({msg, auth, socket}));\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};","import React from 'react'\r\nimport Avatar from './Avatar'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UserCard = ({children, user}) => {\r\n    return (\r\n        <div className=\"user-card\">\r\n            <div className=\"user-card_avatar\">\r\n                <Avatar src={user.avatar} size=\"medium-avatar\"/>\r\n            </div>\r\n            <Link to={`/profile/${user._id}`} className=\"user-card_information\">\r\n                <span className=\"user-card_information-fullName\">{user.fullName}</span>\r\n                <span className=\"user-card_information-username\">@{user.username}</span>\r\n            </Link>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n","export const imageShow = (src) => {\r\n  return (\r\n    <img\r\n      src={src}\r\n      className=\"img-thumbnail\"\r\n      alt=\"upload\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const videoShow = (src) => {\r\n  return (\r\n    <video\r\n      controls\r\n      src={src}\r\n      className=\"img-thumbnail\"\r\n      alt=\"upload\"\r\n    />\r\n  );\r\n};\r\n","export const GLOBALTYPES = {\n  AUTH: \"AUTH\",\n  ALERT: \"ALERT\",\n  THEME: \"THEME\",\n  STATUS: \"STATUS\",\n  CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n  EDIT_PROFILE: \"EDIT_PROFILE\",\n  MODAL: \"MODAL\",\n  USER_TYPE: \"USER_TYPE\",\n  SOCKET: \"SOCKET\",\n};\n\nexport const EditData = (data, id, post) => {\n  const newData = data.map((item) => (item._id === id ? post : item));\n  return newData;\n};\n\nexport const DeleteData = (data, id) => {\n  const newData = data.filter((item) => item._id !== id);\n  return newData;\n};\n\n","import {postDataAPI} from \"../../utils/fetchData\";\nimport {GLOBALTYPES} from \"./globalTypes\";\nimport valid from \"../../utils/valid\";\n\nexport const TYPES = {\n    AUTH: \"AUTH\",\n};\n\nexport const login = (data) => async (dispatch) => {\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n        const res = await postDataAPI(\"login\", data);\n\n        dispatch({\n            type: GLOBALTYPES.AUTH,\n            payload: {token: res.data.access_token, user: res.data.user},\n        });\n\n        dispatch({\n            type: GLOBALTYPES.USER_TYPE,\n            payload: res.data.user.role,\n        });\n\n        localStorage.setItem(\"firstLogin\", true);\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const changePassword = ({oldPassword, newPassword, cnfNewPassword, auth}) => async (dispatch) => {\n    if (!oldPassword || oldPassword.length === 0) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Nhập mật khẩu cũ\"},\n        });\n    }\n    if (!newPassword || newPassword.length === 0) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Nhập mật khẩu mới\"},\n        });\n    }\n    if (!cnfNewPassword || cnfNewPassword.length === 0) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Nhập lại mật khẩu mới\"},\n        });\n    }\n    if (newPassword !== cnfNewPassword) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Nhập lại mật khẩu không trùng khớp\"},\n        });\n    }\n\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n\n        const res = await postDataAPI('changePassword', {oldPassword, newPassword}, auth.token);\n\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: false}});\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const adminLogin = (data) => async (dispatch) => {\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n        const res = await postDataAPI(\"admin_login\", data);\n\n        dispatch({\n            type: GLOBALTYPES.AUTH,\n            payload: {token: res.data.access_token, user: res.data.user},\n        });\n\n        dispatch({\n            type: GLOBALTYPES.USER_TYPE,\n            payload: res.data.user.role,\n        });\n\n        localStorage.setItem(\"firstLogin\", true);\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const refreshToken = () => async (dispatch) => {\n    const firstLogin = localStorage.getItem(\"firstLogin\");\n    if (firstLogin) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n        try {\n            const res = await postDataAPI(\"refresh_token\");\n            dispatch({\n                type: GLOBALTYPES.AUTH,\n                payload: {token: res.data.access_token, user: res.data.user},\n            });\n\n            dispatch({\n                type: GLOBALTYPES.USER_TYPE,\n                payload: res.data.user.role,\n            });\n\n            dispatch({type: GLOBALTYPES.ALERT, payload: {}});\n        } catch (err) {\n            dispatch({\n                type: GLOBALTYPES.ALERT,\n                payload: {error: err.response.data.msg},\n            });\n        }\n    }\n};\n\nexport const register = (data) => async (dispatch) => {\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n\n        const res = await postDataAPI(\"register\", data);\n\n        dispatch({\n            type: GLOBALTYPES.AUTH,\n            payload: {token: res.data.access_token, user: res.data.user},\n        });\n\n        dispatch({\n            type: GLOBALTYPES.USER_TYPE,\n            payload: res.data.user.role,\n        });\n\n        localStorage.setItem(\"firstLogin\", true);\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const registerAdmin = (data) => async (dispatch) => {\n    const check = valid(data);\n    if (check.errLength > 0) {\n        return dispatch({type: GLOBALTYPES.ALERT, payload: check.errMsg});\n    }\n\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n\n        const res = await postDataAPI(\"register_admin\", data);\n\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const logout = () => async (dispatch) => {\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n        localStorage.removeItem(\"firstLogin\");\n\n        await postDataAPI(\"logout\");\n        window.location.href = \"/\";\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: false}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n","import React from 'react'\r\n\r\nconst LoadMoreButton = ({ result, page, load, handleLoadMore }) => {\r\n    return (\r\n        <>\r\n            {result < 9 * (page - 1)\r\n                ? \"\"\r\n                : !load && (\r\n                <button\r\n                    className=\"loadMoreButton\"\r\n                    onClick={handleLoadMore}\r\n                >\r\n                    Xem thêm\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoadMoreButton","export const checkImage = (file) => {\n    let err = \"\";\n    if(!file){\n        return err = \"File không tồn tại\";\n    }\n\n    if(file.size > 1024 * 1024){\n         return (err = \"File lớn hơn 1Mb\");\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n      return (err = \"Sai định dạng ảnh\");\n    }\n\n    return err;\n}\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData();\n\n        if(item.camera){\n            formData.append(\"file\", item.camera);\n        }else{\n            formData.append(\"file\", item);  \n        }\n\n        \n        formData.append(\"upload_preset\", \"xqxi1mtl\");\n        formData.append(\"cloud_name\", \"nguyenhnhatquang\");\n\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/nguyenhnhatquang/upload\", {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        imgArr.push({ public_id: data.public_id, url: data.secure_url });\n        \n      \n    }\n    return imgArr;\n}","import {GLOBALTYPES} from '../actions/globalTypes';\r\nimport {getDataAPI} from '../../utils/fetchData';\r\n\r\nexport const SUGGEST_TYPES = {\r\n    LOADING: \"LOADING_SUGGESTIONS\",\r\n    GET_USERS: \"GET_USERS_SUGGESTIONS\",\r\n};\r\n\r\nexport const getSuggestions = (token) => async dispatch => {\r\n    try {\r\n        dispatch({type: SUGGEST_TYPES.LOADING, payload: true});\r\n\r\n        const res = await getDataAPI(`suggestionsUser`, token);\r\n\r\n        dispatch({type: SUGGEST_TYPES.GET_USERS, payload: res.data});\r\n\r\n        dispatch({type: SUGGEST_TYPES.LOADING, payload: false});\r\n\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\r\n    }\r\n}","import {GLOBALTYPES} from './globalTypes';\r\nimport {getDataAPI} from '../../utils/fetchData';\r\n\r\nexport const DISCOVER_TYPES = {\r\n    LOADING: 'LOADING_DISCOVER',\r\n    GET_POSTS: 'GET_DISCOVER_POSTS',\r\n    UPDATE_POSTS: 'UPDATE_DISCOVER_POSTS',\r\n\r\n}\r\n\r\nexport const getDiscoverPosts = (token) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: DISCOVER_TYPES.LOADING, payload: true});\r\n\r\n        const res = await getDataAPI(`post_discover`, token);\r\n\r\n        dispatch({type: DISCOVER_TYPES.GET_POSTS, payload: res.data});\r\n\r\n        dispatch({type: DISCOVER_TYPES.LOADING, payload: false});\r\n\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\r\n    }\r\n} \r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst PostThumb = ({posts, result}) => {\r\n    const {theme} = useSelector((state) => state);\r\n\r\n    if (result === 0) {\r\n        return <h2 style={{marginTop: \"10px\"}}>Không có bài viết</h2>\r\n    }\r\n\r\n    const imageShow = (src) => {\r\n        return (\r\n            <img\r\n                src={src}\r\n                alt={src}\r\n                style={{filter: theme ? \"invert(1)\" : \"invert(0)\"}}\r\n            />\r\n        );\r\n    };\r\n\r\n    const videoShow = (src) => {\r\n        return (\r\n            <video\r\n                controls\r\n                src={src}\r\n                alt={src}\r\n                style={{filter: theme ? \"invert(1)\" : \"invert(0)\"}}\r\n            />\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"post_thumb\">\r\n            {posts && posts.map((post) => (\r\n                <Link to={`/post/${post._id}`} key={post._id}>\r\n                    <div className=\"post_thumb_display\">\r\n                        {post.images[0].url.match(/video/i)\r\n                            ? videoShow(post.images[0].url, theme)\r\n                            : imageShow(post.images[0].url, theme)\r\n                        }\r\n\r\n                        <div className=\"post_thumb_menu\">\r\n                            <i className=\"far fa-thumbs-up\">{post.likes.length}</i>\r\n                            <i className=\"far fa-comments\">{post.comments.length}</i>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostThumb","import React, {useState, useEffect} from \"react\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/actions/authAction\"\r\n\r\nconst Login = () => {\r\n    const {auth} = useSelector((state) => state);\r\n\r\n    const initialState = {email: \"\", password: \"\"};\r\n    const [userData, setUserData] = useState(initialState);\r\n    const {email, password} = userData;\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (auth.token) history.push(\"/\");\r\n    }, [auth.token, history]);\r\n\r\n    const handleChangeInput = (e) => {\r\n        const {name, value} = e.target;\r\n        setUserData({...userData, [name]: value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(userData));\r\n    };\r\n\r\n    return (\r\n        <form className=\"login--form\" onSubmit={handleSubmit}>\r\n            <div className=\"auth--title\">Đăng nhập</div>\r\n            <div className=\"auth--input-boxes\">\r\n                <div className=\"auth--input-box\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChangeInput}\r\n                        required\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"auth--input-box\">\r\n                    <i className=\"fas fa-lock\"></i>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Nhập mật khẩu\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={handleChangeInput}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"login--text\"><a href=\"#\">Quên mật khẩu</a></div>\r\n                <div className=\"auth--button\">\r\n                    <input type=\"submit\" value=\"Đăng nhập\"/>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useState, useEffect} from \"react\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register} from \"../../redux/actions/authAction\";\r\n\r\nconst Signup = () => {\r\n    const {auth} = useSelector((state) => state);\r\n\r\n    const initialState = {\r\n        fullName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        gender: \"other\",\r\n    };\r\n    const [userData, setUserData] = useState(initialState);\r\n    const {fullName, username, email, password} = userData;\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (auth.token) history.push(\"/\");\r\n    }, [auth.token, history]);\r\n\r\n    const handleChangeInput = (e) => {\r\n        const {name, value} = e.target;\r\n        setUserData({...userData, [name]: value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(register(userData));\r\n    };\r\n\r\n    return (\r\n        <form className=\"signup--form\" onSubmit={handleSubmit}>\r\n            <div className=\"auth--title\">Đăng ký</div>\r\n            <div className=\"auth--input-boxes\">\r\n                <div className=\"auth--input-box\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tên của bạn\"\r\n                        name=\"fullName\"\r\n                        value={fullName}\r\n                        autoComplete=\"name\"\r\n                        onChange={handleChangeInput}\r\n                        required\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"auth--input-box\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tên đăng nhập\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        autoComplete=\"username\"\r\n                        onChange={handleChangeInput}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"auth--input-box\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChangeInput}\r\n                        required\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"auth--input-box\">\r\n                    <i className=\"fas fa-lock\"></i>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Nhập mật khẩu\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={handleChangeInput}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"signup--gender-details\">\r\n                    <div className=\"signup--gender\">\r\n                        <input type=\"radio\" name=\"gender\" value=\"male\" onChange={handleChangeInput}/>\r\n                        <span>Nam</span>\r\n                    </div>\r\n                    <div className=\"signup--gender\">\r\n                        <input type=\"radio\" name=\"gender\" value=\"female\" onChange={handleChangeInput}/>\r\n                        <span>Nữ</span>\r\n                    </div>\r\n                    <div className=\"signup--gender\">\r\n                        <input type=\"radio\" name=\"gender\" value=\"other\" onChange={handleChangeInput} defaultChecked/>\r\n                        <span>Khác</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth--button\">\r\n                    <input type=\"submit\" value=\"Đăng ký\"/>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nimport Login from \"../components/auth/Login\"\r\nimport Signup from \"../components/auth/Signup\"\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <div className=\"auth\">\r\n            <input type=\"checkbox\" id=\"flip\" className=\"auth--flip\"/>\r\n            <div className=\"auth--cover\">\r\n                <div className=\"auth--front\">\r\n                    <img\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1625940936/background_x6rq9e.jpg\"\r\n                        alt=\"background\"/>\r\n                </div>\r\n                <div className=\"auth--back\">\r\n                    <img className=\"backImg\"\r\n                         src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1625940936/background_x6rq9e.jpg\"\r\n                         alt=\"background\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"auth--content\">\r\n                <div className=\"auth--login\">\r\n                    <Login/>\r\n                    <span>\r\n                        Bạn chưa có tài khoản? <label htmlFor=\"flip\" className=\"auth--label\">Đăng ký ngay</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"auth--signup\">\r\n                    <Signup/>\r\n                    <span>\r\n                        Đã có tài khoản? <label htmlFor=\"flip\" className=\"auth--label\">Đăng nhập</label>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;","import React from 'react'\r\nimport LeftSide from \"../../components/message/LeftSide\";\r\n\r\nconst Message = () => {\r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"spaceRight\"/>\r\n            <div className=\"messageBody\">\r\n                <div className=\"message-left\">\r\n                    <LeftSide/>\r\n                </div>\r\n\r\n                <div className=\"message-right\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message","import React from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    return (\r\n        <div>\r\n            Admin Page\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminDashboard;","import React from 'react'\r\nimport Avatar from '../Avatar';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {GLOBALTYPES} from '../../redux/actions/globalTypes'\r\n\r\nconst Status = () => {\r\n    const {auth} = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"home-status\">\r\n            <Avatar src={auth.user.avatar} size=\"big-avatar\"/>\r\n            <button\r\n                className=\"home-status_button\"\r\n                onClick={() => {\r\n                    dispatch({type: GLOBALTYPES.STATUS, payload: true});\r\n                }}>\r\n                Bạn đang nghĩ gì thế?\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Status","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PostCard from \"./PostCard\";\r\nimport LoadMoreButton from \"../LoadMoreButton\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { POST_TYPES } from \"../../redux/actions/postAction\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Posts = () => {\r\n    const { homePosts, auth, theme } = useSelector((state) => state);\r\n    const dispatch =  useDispatch();\r\n\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true);\r\n        const res = await getDataAPI(`posts?limit=${homePosts.page * 9}`, auth.token);\r\n        dispatch({ type: POST_TYPES.GET_POSTS, payload: {...res.data, page: homePosts.page + 1 } });\r\n        setLoad(false);\r\n    };\r\n    return (\r\n        <div className=\"home-posts\">\r\n            {homePosts.posts.map((post) => (\r\n                <PostCard key={post._id} post={post} theme={theme} />\r\n            ))}\r\n\r\n            {load && (\r\n                <img src={LoadIcon} alt=\"Loading...\" style={{marginTop: \"20px\"}} />\r\n            )}\r\n\r\n            <LoadMoreButton\r\n                result={homePosts.result}\r\n                page={homePosts.page}\r\n                load={load}\r\n                handleLoadMore={handleLoadMore}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react'\r\n\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {getSuggestions} from \"../../redux/actions/suggestionsAction\";\r\nimport UserCard from \"../UserCard\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst RightSideBar = () => {\r\n    const {auth, suggestions} = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"right-side\">\r\n            <div className=\"right-side_friends\">\r\n                <span className=\"right-side_friends-title\">Bạn bè của bạn</span>\r\n                <div>\r\n                    {\r\n                        auth.user.friends.map(user => (<UserCard key={user._id} user={user}/>))\r\n                    }\r\n                    <UserCard key={auth.user._id} user={auth.user}/>\r\n                </div>\r\n            </div>\r\n\r\n            {suggestions.users.length != 0 &&\r\n                <div className=\"right-side_suggestion\">\r\n                    <span className=\"right-side_suggestion_title\">Đề xuất</span>\r\n                    <div>\r\n                        {\r\n                            suggestions.users.map(user => (<UserCard key={user._id} user={user}/>))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSideBar\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Status from \"../components/home/Status\";\r\nimport Posts from \"../components/home/Posts\";\r\nimport RightSide from \"../components/sidebar/RightSide\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Home = () => {\r\n    const {homePosts} = useSelector(state => state);\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home-body\">\r\n                <Status/>\r\n                {homePosts.loading ? (\r\n                    <img src={LoadIcon} alt=\"loading\" style={{marginTop: \"20px\", marginLeft: \"25%\"}}/>\r\n                ) : (homePosts.result === 0 ? <h2 className=\"text-center\">Không có bài viết</h2> : <Posts />\r\n                )}\r\n            </div>\r\n            <div className=\"home-right\">\r\n                <RightSide />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {GLOBALTYPES} from '../../redux/actions/globalTypes';\r\nimport {addUser, getConversations} from \"../../redux/actions/messageAction\";\r\nimport {getDataAPI} from '../../utils/fetchData';\r\nimport UserCard from \"../UserCard\";\r\n\r\nconst LeftSide = () => {\r\n    const {auth, message} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    const pageEnd = useRef();\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n    const handleSearch = async e => {\r\n        e.preventDefault();\r\n        if (!search) return setSearchUsers([]);\r\n\r\n        try {\r\n            const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n            setSearchUsers(res.data.users);\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {error: err.response.data.msg},\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleAddUser = (user) => {\r\n        setSearch('');\r\n        setSearchUsers([]);\r\n        dispatch(addUser({user, message}));\r\n        return history.push(`/message/${user._id}`);\r\n    };\r\n\r\n    const isActive = (user) => {\r\n        if (id === user._id) return 'active';\r\n        return '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (message.firstLoad) return;\r\n        dispatch(getConversations({auth}));\r\n    }, [dispatch, auth, message.firstLoad]);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    setPage((p) => p + 1);\r\n                }\r\n            },\r\n            {\r\n                threshold: 0.1,\r\n            }\r\n        );\r\n        observer.observe(pageEnd.current);\r\n    }, [setPage]);\r\n\r\n    useEffect(() => {\r\n        if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n            dispatch(getConversations({auth, page}));\r\n        }\r\n    }, [message.resultUsers, page, auth, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <form className=\"message-left_form\" onSubmit={handleSearch}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    placeholder=\"Nhấn enter để tìm kiếm\"\r\n                />\r\n\r\n                <button style={{display: \"none\"}} type=\"submit\" id=\"search\"/>\r\n            </form>\r\n\r\n            <div className=\"message-left_list\">\r\n                {searchUsers.length !== 0 ? (\r\n                    <>\r\n                        {searchUsers.map((user) => (\r\n                            <div\r\n                                key={user._id}\r\n                                className={`message_user ${isActive(user)}`}\r\n                                onClick={() => handleAddUser(user)}\r\n                            >\r\n                                <UserCard user={user}/>\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {message.users.map((user) => (\r\n                            <div\r\n                                key={user._id}\r\n                                className={`message_user ${isActive(user)}`}\r\n                                onClick={() => handleAddUser(user)}\r\n                            >\r\n                                <UserCard user={user} msg={true}>\r\n                                    <i className=\"fas fa-circle\"/>\r\n                                </UserCard>\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n\r\n                {/*{auth.user.followers.map((user)=>(*/}\r\n                {/*    <div*/}\r\n                {/*        key={user._id}*/}\r\n                {/*        className={`message_user ${isActive(user)}`}*/}\r\n                {/*        onClick={() => handleAddUser(user)}*/}\r\n                {/*    >*/}\r\n                {/*        <UserCard user={user} msg={true}>*/}\r\n                {/*            <i className=\"fas fa-circle\"/>*/}\r\n                {/*        </UserCard>*/}\r\n                {/*    </div>*/}\r\n                {/*))}*/}\r\n\r\n                <button style={{opacity: 0}} ref={pageEnd}>Xem thêm</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LeftSide","import React, {useEffect} from \"react\";\r\nimport Avatar from \"../../Avatar\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {deletePost, reportPost} from \"../../../redux/actions/postAction\";\r\nimport {GLOBALTYPES} from \"../../../redux/actions/globalTypes\";\r\n\r\nconst CardHeader = ({post}) => {\r\n    const {auth, socket} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleEditPost = () => {\r\n        dispatch({type: GLOBALTYPES.STATUS, payload: {...post, onEdit: true}});\r\n    };\r\n\r\n    const handleDeletePost = () => {\r\n        if (window.confirm(\"Bạn có thực sự muốn xoá?\")) {\r\n            dispatch(deletePost({post, auth, socket}));\r\n            return history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    const handleReportPost = () => {\r\n        dispatch(reportPost({post, auth}));\r\n    };\r\n\r\n    return (\r\n        <div className=\"card-header\">\r\n            <div className=\"card-header_avatar\">\r\n                <Avatar src={post.user.avatar} size=\"big-avatar\"/>\r\n            </div>\r\n\r\n            <div className=\"card-header_user\">\r\n                <span>\r\n                    <Link to={`/profile/${post.user._id}`} className=\"card-header_user-name\">\r\n                        {post.user.fullName}\r\n                    </Link>\r\n                </span>\r\n                <span className=\"card-header_user-createdAt\">\r\n                    {moment(post.createdAt).format(\"LLLL\")}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"card-header_dropDown\">\r\n                <input\r\n                    className=\"card-header_dropDown-input\"\r\n                    id={`card-header_${post._id}`}\r\n                    type=\"checkbox\"\r\n                />\r\n                <label htmlFor={`card-header_${post._id}`}>\r\n                    <img\r\n                        className=\"search-icon--close\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627459882/icon/more_u9f94p.svg\"\r\n                        alt=\"more\"\r\n                    />\r\n                </label>\r\n\r\n                <div className=\"card-header_dropDown-menu\">\r\n                    {auth.user._id === post.user._id ? (\r\n                            <>\r\n                                <div className=\"card-header_dropDown-item\" onClick={handleEditPost}>\r\n                                    Chỉnh Sửa\r\n                                </div>\r\n                                <div className=\"card-header_dropDown-item\" onClick={handleDeletePost}>\r\n                                    Xoá\r\n                                </div>\r\n                            </>\r\n                        ) :\r\n                        (\r\n                            <div className=\"card-header_dropDown-item\" onClick={handleReportPost}>\r\n                                Báo cáo\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardHeader;","import React, {useEffect, useRef, useState} from 'react'\r\n\r\nconst delay = 2500;\r\n\r\nconst Carousel = ({images, id}) => {\r\n    const [index, setIndex] = useState(0);\r\n    const timeoutRef = useRef(null);\r\n\r\n    const resetTimeout = () => {\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        resetTimeout();\r\n        timeoutRef.current = setTimeout(\r\n            () =>\r\n                setIndex((prevIndex) =>\r\n                    prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n                ),\r\n            delay\r\n        );\r\n        return () => {\r\n        };\r\n    }, [index]);\r\n\r\n    return (\r\n        <div className=\"slide-show\" id={id}>\r\n            <div className=\"slide-show-slider\" style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}>\r\n                {images.map((img, index) => (\r\n                    <div key={index} className=\"slide\">\r\n                        {img.url.match(/video/i) ? (\r\n                            <video\r\n                                controls\r\n                                src={img.url}\r\n                                alt={img.url}\r\n                            />\r\n                        ) : (\r\n                            <img\r\n                                src={img.url}\r\n                                alt={img.url}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"slide-show-dots\">\r\n                {images.map((_, idx) => (\r\n                    <div\r\n                        key={idx}\r\n                        className={`slide-show-dot${index === idx ? \" active\" : \"\"}`}\r\n                        onClick={() => {\r\n                            setIndex(idx);\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Carousel;\r\n","import React, {useState} from 'react'\r\nimport Carousel from \"../../Carousel\";\r\n\r\nconst CardBody = ({post, theme}) => {\r\n    const [readMore, setReadMore] = useState(false)\r\n\r\n    return (\r\n        <div className=\"card-body\">\r\n            <div\r\n                className=\"card-body_content\"\r\n                style={{\r\n                    filter: theme ? \"invert(1)\" : \"invert(0)\",\r\n                    color: theme ? \"white\" : \"#111\",\r\n                }}\r\n            >\r\n                <p className=\"card-body_content-text\">\r\n                    {post.content.length < 60\r\n                        ? post.content\r\n                        : readMore\r\n                            ? post.content + \" \"\r\n                            : post.content.slice(0, 55) + \"... \"}\r\n                    {post.content.length > 60 && (\r\n                        <span\r\n                            className=\"card-body_content-textMore\"\r\n                            onClick={() => setReadMore(!readMore)}\r\n                        >\r\n              {readMore ? \"Ẩn\" : \"Xem thêm\"}\r\n            </span>\r\n                    )}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"images\">\r\n                {post.images.length > 0 && (\r\n                    <Carousel images={post.images} id={post._id}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardBody;\r\n","import React from 'react'\r\n\r\nconst LikeButton = ({className, isLike, handleLike, handleUnLike}) => {\r\n    return (\r\n        <>\r\n            {\r\n                isLike\r\n                    ? <img\r\n                        className={className}\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627476034/icon/heart_full_jgml7q.svg\"\r\n                        alt=\"heart\"\r\n                        onClick={handleUnLike}\r\n                    />\r\n                    : <img\r\n                        className={className}\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627476001/icon/heart_dnjyql.svg\"\r\n                        alt=\"heart\"\r\n                        onClick={handleLike}\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LikeButton\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport LikeButton from '../../LikeButton'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {likePost, unLikePost, savePost, unSavePost} from '../../../redux/actions/postAction'\r\n\r\nconst CardFooter = ({post}) => {\r\n    const [isLike, setIsLike] = useState(false)\r\n    const [loadLike, setLoadLike] = useState(false)\r\n\r\n    const {auth, socket} = useSelector(state => state)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [saved, setSaved] = useState(false)\r\n    const [saveLoad, setSaveLoad] = useState(false)\r\n\r\n    // Likes\r\n    useEffect(() => {\r\n        if (post.likes.find(like => like._id === auth.user._id)) {\r\n            setIsLike(true)\r\n        } else {\r\n            setIsLike(false)\r\n        }\r\n    }, [post.likes, auth.user._id])\r\n\r\n    const handleLike = async () => {\r\n        if (loadLike) return;\r\n\r\n        setLoadLike(true)\r\n        await dispatch(likePost({post, auth, socket}))\r\n        setLoadLike(false)\r\n    }\r\n\r\n    const handleUnLike = async () => {\r\n        if (loadLike) return;\r\n\r\n        setLoadLike(true)\r\n        await dispatch(unLikePost({post, auth, socket}))\r\n        setLoadLike(false)\r\n    }\r\n\r\n    // Saved\r\n    useEffect(() => {\r\n        if (auth.user.saved.find(id => id === post._id)) {\r\n            setSaved(true)\r\n        } else {\r\n            setSaved(false)\r\n        }\r\n    }, [auth.user.saved, post._id])\r\n\r\n    const handleSavePost = async () => {\r\n        if (saveLoad) return;\r\n\r\n        setSaveLoad(true)\r\n        await dispatch(savePost({post, auth}))\r\n        setSaveLoad(false)\r\n    }\r\n\r\n    const handleUnSavePost = async () => {\r\n        if (saveLoad) return;\r\n\r\n        setSaveLoad(true)\r\n        await dispatch(unSavePost({post, auth}))\r\n        setSaveLoad(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-footer\">\r\n            <div className=\"card-footer_like\">\r\n                <LikeButton\r\n                    className={\"card-footer_icon-button\"}\r\n                    isLike={isLike}\r\n                    handleLike={handleLike}\r\n                    handleUnLike={handleUnLike}\r\n                />\r\n                <span className=\"card-footer_count\">{post.likes.length}</span>\r\n            </div>\r\n\r\n            <Link to={`/post/${post._id}`} className=\"card-footer_comment\">\r\n                <img\r\n                    className=\"card-footer_icon-button\"\r\n                    src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627477286/icon/comments_okihza.svg\"\r\n                    alt=\"heart\"\r\n                    onClick={handleUnLike}\r\n                />\r\n                <span className=\"card-footer_count\">{post.comments.length}</span>\r\n            </Link>\r\n\r\n            <div className=\"card-footer_save\">\r\n                {saved ? (\r\n                    <img\r\n                        className=\"card-footer_icon-button\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627477470/icon/bookmark_full_oxk6mm.svg\"\r\n                        alt=\"heart\"\r\n                        onClick={handleUnSavePost}\r\n                    />\r\n                ) : (\r\n                    <img\r\n                        className=\"card-footer_icon-button\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627477490/icon/bookmark_nbhzjk.svg\"\r\n                        alt=\"heart\"\r\n                        onClick={handleSavePost}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardFooter\r\n","import {GLOBALTYPES, EditData, DeleteData} from \"./globalTypes\";\nimport {POST_TYPES} from \"./postAction\";\nimport {createNotify, removeNotify} from \"./notifyAction\";\nimport {postDataAPI, patchDataAPI, deleteDataAPI} from \"../../utils/fetchData\";\n\nexport const createComment = ({post, newComment, auth, socket}) => async (dispatch) => {\n    const newPost = {...post, comments: [...post.comments, newComment]};\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n\n    try {\n        const data = {\n            ...newComment,\n            postId: post._id,\n            postUserId: post.user._id,\n        };\n        const res = await postDataAPI(\"comment\", data, auth.token);\n\n        const newData = {...res.data.newComment, user: auth.user};\n        const newPost = {...post, comments: [...post.comments, newData]};\n        dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n\n        // todo socket\n        socket.emit(\"createComment\", newPost);\n\n        // todo notification\n        const msg = {\n            id: res.data.newComment._id,\n            text: newComment.reply\n                ? \" đề cập đến bạn trong một bình luận\"\n                : \" đã nhận xét bài viết của bạn\",\n            recipients: newComment.reply ? [newComment.tag._id] : [post.user._id],\n            url: `/post/${post._id}`,\n            content: newComment.reply\n                ? newComment.content\n                : post.content,\n            image: post.images[0].url,\n        };\n\n        dispatch(createNotify({msg, auth, socket}));\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\n    }\n};\n\nexport const updateComment = ({comment, post, content, auth}) => async (dispatch) => {\n    const newComments = EditData(post.comments, comment._id, {...comment, content});\n    const newPost = {...post, comments: newComments};\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n\n    try {\n        await patchDataAPI(`comment/${comment._id}`, {content}, auth.token);\n\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\n    }\n};\n\nexport const likeComment = ({comment, post, auth}) => async (dispatch) => {\n    const newComment = {...comment, likes: [...comment.likes, auth.user]};\n    const newComments = EditData(post.comments, comment._id, newComment);\n    const newPost = {...post, comments: newComments};\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n    try {\n        await patchDataAPI(`comment/${comment._id}/like`, null, auth.token);\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}});\n\n    }\n};\n\nexport const unLikeComment = ({comment, post, auth}) => async (dispatch) => {\n    const newComment = {...comment, likes: DeleteData(comment.likes, auth.user._id)};\n    const newComments = EditData(post.comments, comment._id, newComment);\n    const newPost = {...post, comments: newComments};\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n    try {\n        await patchDataAPI(`comment/${comment._id}/unlike`, null, auth.token);\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};\n\nexport const deleteComment = ({post, comment, auth, socket}) => async (dispatch) => {\n    const deleteArr = [...post.comments.filter(cm => cm.reply === comment._id), comment];\n\n    const newPost = {\n        ...post,\n        comments: post.comments.filter(cm => !deleteArr.find(da => cm._id === da._id))\n    }\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n\n    socket.emit('deleteComment', newPost);\n\n    try {\n        deleteArr.forEach(item => {\n            deleteDataAPI(`comment/${item._id}`, auth.token);\n\n            // todo notification\n            const msg = {\n                id: item._id,\n                text: item.reply\n                    ? \" đề cập đến bạn trong một bình luận\"\n                    : \" đã nhận xét bài viết của bạn\",\n                recipients: item.reply ? [item.tag._id] : [post.user._id],\n                url: `/post/${post._id}`,\n            };\n\n            dispatch(removeNotify({msg, auth, socket}));\n        })\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg},\n        });\n    }\n};","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {createComment} from \"../../redux/actions/commentAction\";\r\n\r\nconst InputComment = ({children, post, onReply, setOnReply}) => {\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    const {auth, socket} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!content.trim()) {\r\n            if (setOnReply) return setOnReply(false);\r\n            return;\r\n        }\r\n\r\n        setContent(\"\");\r\n\r\n        const newComment = {\r\n            content,\r\n            likes: [],\r\n            user: auth.user,\r\n            createdAt: new Date().toISOString(),\r\n            reply: onReply && onReply.commentId,\r\n            tag: onReply && onReply.user,\r\n        };\r\n\r\n        dispatch(createComment({post, newComment, auth, socket}));\r\n\r\n        if (setOnReply) return setOnReply(false);\r\n    };\r\n\r\n    return (\r\n        <form className=\"inputComment\" onSubmit={handleSubmit}>\r\n            {children}\r\n            <div className=\"inputComment-main\">\r\n                <input\r\n                    className=\"inputComment-main_input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Viết bình luận...\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                />\r\n                <span className=\"inputComment-main_submit\" type=\"submit\" onClick={handleSubmit}>\r\n                    <i className=\"far fa-paper-plane\"></i>\r\n                </span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default InputComment;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport moment from 'moment'\r\nimport {deleteComment, likeComment, unLikeComment, updateComment} from \"../../../redux/actions/commentAction\";\r\nimport Avatar from \"../../Avatar\";\r\nimport LikeButton from \"../../LikeButton\";\r\nimport InputComment from \"../InputComment\";\r\n\r\n\r\nconst CommentCard = ({children, comment, post, commentId}) => {\r\n    const {auth, socket} = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [content, setContent] = useState('')\r\n\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [isLike, setIsLike] = useState(false)\r\n    const [loadLike, setLoadLike] = useState(false)\r\n\r\n    const [onReply, setOnReply] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setContent(comment.content)\r\n        setIsLike(false)\r\n        setOnReply(false)\r\n        if (comment.likes.find(like => like._id === auth.user._id)) {\r\n            setIsLike(true)\r\n        }\r\n    }, [comment, auth.user._id])\r\n\r\n    const handleUpdate = () => {\r\n        if (comment.content !== content) {\r\n            dispatch(updateComment({comment, post, content, auth}))\r\n            setOnEdit(false)\r\n        } else {\r\n            setOnEdit(false)\r\n        }\r\n    }\r\n\r\n\r\n    const handleLike = async () => {\r\n        if (loadLike) return;\r\n        setIsLike(true)\r\n\r\n        setLoadLike(true)\r\n        await dispatch(likeComment({comment, post, auth}))\r\n        setLoadLike(false)\r\n    }\r\n\r\n    const handleUnLike = async () => {\r\n        if (loadLike) return;\r\n        setIsLike(false)\r\n\r\n        setLoadLike(true)\r\n        await dispatch(unLikeComment({comment, post, auth}))\r\n        setLoadLike(false)\r\n    }\r\n\r\n\r\n    const handleReply = () => {\r\n        if (onReply) return setOnReply(false)\r\n        setOnReply({...comment, commentId})\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        if (post.user._id === auth.user._id || comment.user._id === auth.user._id) {\r\n            dispatch(deleteComment({post, auth, comment, socket}));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"commentCard\" style={{flexDirection: \"column\"}}>\r\n            <div className=\"commentCard\">\r\n                <div className=\"commentCard-avatar\">\r\n                    <Avatar\r\n                        src={comment.user.avatar}\r\n                        size=\"medium-avatar\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"commentCard-content\">\r\n                    <div className=\"commentCard-content_text\">\r\n                        <Link to={`/profile/${comment.user._id}`} className=\"commentCard-content_name\">\r\n                            {comment.user.fullName}\r\n                        </Link>\r\n\r\n                        <div className=\"\">\r\n                            {onEdit ? (\r\n                                <textarea\r\n                                    className=\"commentCard-content_textArea\"\r\n                                    rows=\"3\"\r\n                                    value={content}\r\n                                    onChange={(e) => setContent(e.target.value)}\r\n                                />\r\n                            ) : (\r\n                                <div>\r\n                                    {comment.tag && comment.tag._id !== comment.user._id && (\r\n                                        <Link to={`/profile/${comment.tag._id}`} className=\"\">\r\n                                            @{comment.tag.username}\r\n                                        </Link>\r\n                                    )}\r\n                                    <span className=\"\">\r\n                                        {content}\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"commentCard-content_button\">\r\n                        {onEdit ? (\r\n                            <div className=\"commentCard-content_button-item\">\r\n                                <small style={{marginRight: \"10px\"}} onClick={handleUpdate}>\r\n                                    Xong\r\n                                </small>\r\n                                <small onClick={() => setOnEdit(false)}>\r\n                                    Huỷ\r\n                                </small>\r\n                            </div>\r\n                        ) : (\r\n                            <small className=\"commentCard-content_button-item\" onClick={handleReply}>\r\n                                {onReply ? \"Huỷ\" : \"Trả lời\"}\r\n                            </small>\r\n                        )}\r\n\r\n                        <span className=\"commentCard-content_button-date\">\r\n                        {moment(comment.createdAt).fromNow()}\r\n                    </span>\r\n                    </div>\r\n\r\n                    {comment.likes.length > 0 && (\r\n                        <div className=\"commentCard-likeCount\">\r\n                            <img\r\n                                src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627476034/icon/heart_full_jgml7q.svg\"\r\n                                alt=\"heart\"\r\n                            />\r\n                            <span>{comment.likes.length}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    <LikeButton\r\n                        className=\"commentCard-likeButton\"\r\n                        isLike={isLike}\r\n                        handleLike={handleLike}\r\n                        handleUnLike={handleUnLike}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"commentCard-menu\">\r\n                    <input\r\n                        className=\"card-header_dropDown-input\"\r\n                        id={`card-header_${commentId}`}\r\n                        type=\"checkbox\"\r\n                    />\r\n                    <label htmlFor={`card-header_${commentId}`}>\r\n                        <img\r\n                            className=\"search-icon--close\"\r\n                            src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627459882/icon/more_u9f94p.svg\"\r\n                            alt=\"more\"\r\n                        />\r\n                    </label>\r\n\r\n                    <div className=\"card-header_dropDown-menu\" style={{width:\"60px\"}}>\r\n                        {/* Người cmt có thể sửa */}\r\n                        {\r\n                            comment.user._id === auth.user._id && (\r\n                                <div className=\"card-header_dropDown-item\" onClick={() => setOnEdit(true)}>\r\n                                    Sửa\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        {/* Chủ bài post với cmt có thể xoá */}\r\n                        {\r\n                            (post.user._id === auth.user._id ||\r\n                                comment.user._id === auth.user._id) && (\r\n                                <div className=\"card-header_dropDown-item\" onClick={handleRemove}>\r\n                                    Xoá\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {onReply && (\r\n                <div className=\"commentCard-reply\">\r\n                    <InputComment post={post} onReply={onReply} setOnReply={setOnReply}>\r\n                        <Link to={`/profile/${onReply.user._id}`}>\r\n                            @{onReply.user.username}:\r\n                        </Link>\r\n                    </InputComment>\r\n                </div>\r\n            )}\r\n\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCard\r\n","import React, {useState, useEffect} from 'react'\r\nimport CommentCard from \"./CommentCard\";\r\n\r\nconst CommentDisplay = ({comment, post, replyCm}) => {\r\n    const [showRep, setShowRep] = useState([])\r\n    const [next, setNext] = useState(1)\r\n\r\n    useEffect(() => {\r\n        setShowRep(replyCm.slice(replyCm.length - next))\r\n    }, [replyCm, next])\r\n\r\n    return (\r\n        <CommentCard comment={comment} post={post} commentId={comment._id}>\r\n            {showRep.map(\r\n                (item, index) =>\r\n                    item.reply && (\r\n                        <CommentCard\r\n                            key={index}\r\n                            comment={item}\r\n                            post={post}\r\n                            commentId={comment._id}\r\n                        />\r\n                    )\r\n            )}\r\n\r\n            {replyCm.length - next > 0 ? (\r\n                <div\r\n                    className=\"more-comment\"\r\n                    onClick={() => setNext(next + 10)}\r\n                >\r\n                    Xem thêm\r\n                </div>\r\n            ) : (\r\n                replyCm.length > 1 && (\r\n                    <div className=\"more-comment\" onClick={() => setNext(1)}>\r\n                        Ẩn bớt\r\n                    </div>\r\n                )\r\n            )}\r\n        </CommentCard>\r\n    );\r\n}\r\n\r\nexport default CommentDisplay","import React, {useState, useEffect} from 'react'\r\nimport CommentDisplay from \"./comment/CommentDisplay\";\r\n\r\nconst Comments = ({post}) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [showComments, setShowComments] = useState([]);\r\n    const [next, setNext] = useState(2);\r\n\r\n    const [replyComments, setReplyComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newCm = post.comments.filter((cm) => !cm.reply);\r\n        setComments(newCm);\r\n        setShowComments(newCm.slice(newCm.length - next));\r\n    }, [post.comments, next]);\r\n\r\n    useEffect(() => {\r\n        const newRep = post.comments.filter((cm) => cm.reply);\r\n        setReplyComments(newRep);\r\n    }, [post.comments]);\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"comment-container\">\r\n                {showComments.map((comment, index) => (\r\n                    <CommentDisplay\r\n                        key={index}\r\n                        comment={comment}\r\n                        post={post}\r\n                        replyCm={replyComments.filter((item) => item.reply === comment._id)}\r\n                    />\r\n                ))}\r\n\r\n                {comments.length - next > 0 ? (\r\n                    <div\r\n                        className=\"more-comment\"\r\n                        onClick={() => setNext(next + 10)}\r\n                    >\r\n                        Xem thêm ...\r\n                    </div>\r\n                ) : (\r\n                    comments.length > 2 && (\r\n                        <div className=\"more-comment\" onClick={() => setNext(2)}>\r\n                            Ẩn bớt\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport CardHeader from \"./post-card/CardHeader\";\r\nimport CardBody from \"./post-card/CardBody\";\r\nimport CardFooter from \"./post-card/CardFooter\";\r\nimport Comments from \"./comment\";\r\nimport InputComment from \"./InputComment\";\r\n\r\nconst PostCard = ({ post, theme }) => {\r\n    return (\r\n        <div className=\"post-card\">\r\n            <CardHeader post={post} />\r\n            <CardBody post={post} theme={theme} />\r\n            <CardFooter post={post} />\r\n\r\n            <Comments post={post} />\r\n            <InputComment post={post} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostCard","import axios from 'axios';\n\nexport const getDataAPI = async (url,token) => {\n    const res = await axios.get(`/api/${url}`,{\n        headers: { Authorization: token}\n    });\n    return res;\n}\n\nexport const postDataAPI = async (url, post, token) => {\n  const res = await axios.post(`/api/${url}`, post, {\n    headers: { Authorization: token },\n  });\n  return res;\n};\n\nexport const putDataAPI = async (url, post, token) => {\n  const res = await axios.put(`/api/${url}`, post, {\n    headers: { Authorization: token },\n  });\n  return res;\n};\n\nexport const patchDataAPI = async (url, post, token) => {\n  const res = await axios.patch(`/api/${url}`, post, {\n    headers: { Authorization: token },\n  });\n  return res;\n};\n\n\nexport const deleteDataAPI = async (url, token) => {\n  const res = await axios.delete(`/api/${url}`, {\n    headers: { Authorization: token },\n  });\n  return res;\n};","import React, { useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDiscoverPosts, DISCOVER_TYPES } from \"../redux/actions/discoverAction\";\r\nimport PostThumb from \"../components/PostThumb\";\r\nimport { getDataAPI } from '../utils/fetchData';\r\nimport LoadMoreButton from \"../components/LoadMoreButton\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Discover = () => {\r\n    const { auth, discover } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!discover.firstLoad) {\r\n            dispatch(getDiscoverPosts(auth.token));\r\n        }\r\n    }, [dispatch, auth.token, discover.firstLoad]);\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true);\r\n        const res = await getDataAPI(`post_discover?num=${discover.page * 8}`, auth.token);\r\n        dispatch({ type: DISCOVER_TYPES.UPDATE_POSTS, payload: res.data });\r\n        setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"discover\">\r\n            {discover.loading ? (\r\n                <img\r\n                    src={LoadIcon}\r\n                    alt=\"Loading...\"\r\n                    className=\"d-block mx-auto my-4\"\r\n                />\r\n            ) : (\r\n                <PostThumb posts={discover.posts} result={discover.result} />\r\n\r\n            )}\r\n\r\n            {load && (\r\n                <img src={LoadIcon} alt=\"Loading...\" className=\"d-block mx-auto\" />\r\n            )}\r\n\r\n            {!discover.loading && (\r\n                <LoadMoreButton\r\n                    result={discover.result}\r\n                    page={discover.page}\r\n                    load={load}\r\n                    handleLoadMore={handleLoadMore}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discover;","import {GLOBALTYPES} from \"./globalTypes\";\nimport {postDataAPI, getDataAPI, patchDataAPI, deleteDataAPI} from \"../../utils/fetchData\";\nimport {imageUpload} from \"../../utils/imageUpload\";\nimport {createNotify, removeNotify} from \"./notifyAction\";\n\nexport const POST_TYPES = {\n    CREATE_POST: \"CREATE_POST\",\n    LOADING_POST: \"LOADING_POST\",\n    GET_POSTS: \"GET_POSTS\",\n    UPDATE_POST: \"UPDATE_POST\",\n    GET_POST: \"GET_POST\",\n    DELETE_POST: \"DELETE_POST\",\n    REPORT_POST: \"REPORT_POST\",\n    SAVE_POST: \"SAVE_POST\",\n};\n\nexport const createPost = ({content, images, auth, socket}) => async dispatch => {\n    let media = [];\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n\n        if (images.length > 0) {\n            media = await imageUpload(images)\n        }\n\n        const res = await postDataAPI('posts', {content, images: media}, auth.token);\n\n        dispatch({type: POST_TYPES.CREATE_POST, payload: {...res.data.newPost, user: auth.user}});\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: false}});\n\n        // todo notification\n        const msg = {\n            id: res.data.newPost._id,\n            text: \"Đã thêm một bài viết mới\",\n            recipients: res.data.newPost.user.followers,\n            url: `/post/${res.data.newPost._id}`,\n            content,\n            image: media[0].url\n        };\n\n        dispatch(createNotify({msg, auth, socket}));\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg\n            }\n        })\n    }\n}\n\nexport const getPosts = (token) => async dispatch => {\n    try {\n        dispatch({type: POST_TYPES.LOADING_POST, payload: true});\n        const res = await getDataAPI('posts', token);\n        dispatch({type: POST_TYPES.GET_POSTS, payload: {...res.data, page: 2}});\n\n        dispatch({type: POST_TYPES.LOADING_POST, payload: false});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n}\n\nexport const updatePost = ({content, images, auth, status}) => async (dispatch) => {\n    let media = [];\n    const imgNewUrl = images.filter(img => !img.url);\n    const imgOldUrl = images.filter(img => img.url);\n    if (status.content === content && imgNewUrl.length === 0 && imgOldUrl.length === status.images.length) {\n        return;\n    }\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}});\n        if (imgNewUrl.length > 0) {\n            media = await imageUpload(imgNewUrl);\n        }\n        const res = await patchDataAPI(\n            `post/${status._id}`,\n            {content, images: [...imgOldUrl, ...media]},\n            auth.token\n        );\n\n        dispatch({type: POST_TYPES.UPDATE_POST, payload: res.data.newPost});\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n\nexport const likePost = ({post, auth, socket}) => async (dispatch) => {\n    const newPost = {...post, likes: [...post.likes, auth.user]};\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n    socket.emit(\"likePost\", newPost);\n\n    try {\n        await patchDataAPI(`post/${post._id}/like`, null, auth.token);\n\n        // todo notification\n        const msg = {\n            id: auth.user._id,\n            text: \"Thích bài viết của bạn\",\n            recipients: [post.user._id],\n            url: `/post/${post._id}`,\n            content: post.content,\n            image: post.images[0].url,\n        };\n\n        dispatch(createNotify({msg, auth, socket}));\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n\n\nexport const unLikePost = ({post, auth, socket}) => async (dispatch) => {\n    const newPost = {...post, likes: post.likes.filter(like => like._id !== auth.user._id)};\n\n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost});\n    socket.emit(\"unLikePost\", newPost);\n\n\n    try {\n        await patchDataAPI(`post/${post._id}/unlike`, null, auth.token);\n\n        // todo notification\n        const msg = {\n            id: auth.user._id,\n            text: \"Thích bài viết của bạn\",\n            recipients: [post.user._id],\n            url: `/post/${post._id}`,\n        };\n\n        dispatch(removeNotify({msg, auth, socket}));\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n\nexport const getPost = ({detailPost, id, auth}) => async (dispatch) => {\n    if (detailPost.every(post => post._id !== id)) {\n        try {\n            const res = await getDataAPI(`post/${id}`, auth.token);\n            dispatch({type: POST_TYPES.GET_POST, payload: res.data.post})\n\n\n        } catch (err) {\n            dispatch({\n                type: GLOBALTYPES.ALERT,\n                payload: {\n                    error: err.response.data.msg,\n                },\n            });\n        }\n    }\n};\n\nexport const deletePost = ({post, auth, socket}) => async (dispatch) => {\n    dispatch({type: POST_TYPES.DELETE_POST, payload: post});\n\n    try {\n        const res = await deleteDataAPI(`post/${post._id}`, auth.token);\n\n        // todo notification\n        const msg = {\n            id: post._id,\n            text: \"Đã thêm một bài viết mới\",\n            recipients: res.data.newPost.user.followers,\n            url: `/post/${post._id}`,\n        };\n\n        dispatch(removeNotify({msg, auth, socket}));\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n\nexport const reportPost = ({post, auth}) => async (dispatch) => {\n    const reportExist = post.reports.find(report => report === auth.user._id);\n\n    if (reportExist && reportExist.length > 0) {\n        return dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: \"Bạn đã báo cáo bài viết này\"},\n        });\n    }\n    const newPost = {...post};\n    newPost.reports.push(auth.user._id);\n\n    dispatch({type: POST_TYPES.REPORT_POST, payload: newPost});\n\n    try {\n        const res = await patchDataAPI(`post/${post._id}/report`, null, auth.token);\n        dispatch({type: GLOBALTYPES.ALERT, payload: {success: res.data.msg}});\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n\nexport const savePost = ({post, auth}) => async (dispatch) => {\n    const newUser = {...auth.user, saved: [...auth.user.saved, post._id]};\n\n    dispatch({type: GLOBALTYPES.AUTH, payload: {...auth, user: newUser}});\n\n\n    try {\n        await patchDataAPI(`savePost/${post._id}`, null, auth.token);\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n\nexport const unSavePost = ({post, auth}) => async (dispatch) => {\n    const newUser = {...auth.user, saved: auth.user.saved.filter(id => id !== post._id)};\n    dispatch({type: GLOBALTYPES.AUTH, payload: {...auth, user: newUser}});\n\n    try {\n        await patchDataAPI(`unSavePost/${post._id}`, null, auth.token);\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {\n                error: err.response.data.msg,\n            },\n        });\n    }\n};\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPost } from '../../redux/actions/postAction';\r\nimport PostCard from \"../../components/home/PostCard\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Post = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const { auth, detailPost } = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPost({ detailPost, id, auth }));\r\n        if (detailPost.length > 0) {\r\n            const newArr = detailPost.filter((post) => post._id === id);\r\n            setPost(newArr);\r\n        }\r\n    }, [detailPost, dispatch, id, auth]);\r\n\r\n    return (\r\n        <div className=\"post-page\">\r\n            {\r\n                post.length === 0 &&\r\n                <img src={LoadIcon} alt=\"Loading...\" className=\"d-block mx-auto my-4\" />\r\n            }\r\n\r\n            {\r\n                post.map(item => (\r\n                    <PostCard post={item} key={item._id} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {useEffect} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst SearchPage = ({}) => {\r\n    const location = useLocation();\r\n    const users = location.state.users;\r\n\r\n    return (\r\n        <div className=\"search-page\">\r\n            <span>Kết quả tìm kiếm</span>\r\n            {\r\n                users ? users.map( user => (<span>{user.username}</span>))\r\n                      : <span>Không tìm thấy</span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchPage;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { follow, unfollow } from \"../redux/actions/profileAction\";\r\n\r\nconst FollowButton = ({user}) => {\r\n    const [ followed, setFollowed ] = useState(false);\r\n\r\n    const { auth, profile, socket } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (auth.user.following.find((item) => item._id === user._id)) {\r\n            setFollowed(true);\r\n        }\r\n        return () => setFollowed(false);\r\n    }, [auth.user.following, user._id]);\r\n\r\n    const handleFollow = async () => {\r\n        if(load) return;\r\n\r\n        setFollowed(true);\r\n        setLoad(true);\r\n        await dispatch(follow({ users: profile.users, user, auth, socket }));\r\n        setLoad(false);\r\n    };\r\n\r\n    const handleUnFollow = async () => {\r\n        if (load) return;\r\n\r\n        setFollowed(false);\r\n        setLoad(true);\r\n        await dispatch(unfollow({ users: profile.users, user, auth, socket }));\r\n        setLoad(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {followed ? (\r\n                <button className=\"info-content_button\" onClick={handleUnFollow}>\r\n                    Huỷ theo dõi\r\n                </button>\r\n            ) : (\r\n                <button className=\"info-content_button\" onClick={handleFollow}>\r\n                    Theo dõi\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FollowButton","import React from \"react\";\r\nimport UserCard from \"../UserCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FollowButton from \"../FollowButton\";\r\n\r\nconst Following = ({ users, setShowFollowing }) => {\r\n    const { auth } = useSelector((state) => state);\r\n    return (\r\n        <div className=\"follow\">\r\n            <div className=\"follow_box\">\r\n                <h5 className=\"text-center follow_box-heading\">Đã theo dõi</h5>\r\n                <hr />\r\n                {users.map((user) => (\r\n                    <UserCard\r\n                        key={user._id}\r\n                        setShowFollowing={setShowFollowing}\r\n                        user={user}\r\n                    >\r\n                        {auth.user._id !== user._id && <FollowButton user={user} />}\r\n                    </UserCard>\r\n                ))}\r\n\r\n                <div className=\"follow-close\" onClick={() => setShowFollowing(false)}>\r\n                    <img\r\n                        className=\"search-icon--close\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                        alt=\"message\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Following;","import React from \"react\";\r\nimport UserCard from \"../UserCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FollowButton from \"../FollowButton\";\r\nimport {GLOBALTYPES} from \"../../redux/actions/globalTypes\";\r\n\r\nconst Followers = ({ users, setShowFollowers }) => {\r\n    const { auth } = useSelector((state) => state);\r\n    return (\r\n        <div className=\"follow\">\r\n            <div className=\"follow_box\">\r\n                <h4 className=\"text-center follow_box-heading\">Được theo dõi</h4>\r\n                <hr />\r\n                {users.map((user) => (\r\n                    <UserCard\r\n                        key={user._id}\r\n                        setShowFollowers={setShowFollowers}\r\n                        user={user}\r\n                    >\r\n                        {auth.user._id !== user._id && <FollowButton user={user} />}\r\n                    </UserCard>\r\n                ))}\r\n\r\n                <div className=\"follow-close\" onClick={() => setShowFollowers(false)}>\r\n                    <img\r\n                        className=\"search-icon--close\"\r\n                        src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626912787/icon/error_l9krog.svg\"\r\n                        alt=\"message\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Followers;","import React, {useState, useEffect} from 'react';\r\nimport Avatar from '../Avatar';\r\nimport Following from './Following';\r\nimport Followers from './Followers';\r\nimport {GLOBALTYPES} from '../../redux/actions/globalTypes';\r\nimport FollowButton from \"../FollowButton\";\r\n\r\nconst Info = ({id, auth, profile, dispatch}) => {\r\n    const [userData, setUserData] = useState([]);\r\n    const [onEdit, setOnEdit] = useState(false);\r\n\r\n    const [showFollowers, setShowFollowers] = useState(false);\r\n    const [showFollowing, setShowFollowing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id === auth.user._id) {\r\n            setUserData([auth.user]);\r\n        } else {\r\n            const newData = profile.users.filter(user => user._id === id);\r\n            setUserData(newData);\r\n        }\r\n    }, [id, auth, dispatch, profile.users]);\r\n\r\n    useEffect(() => {\r\n        if (showFollowers || showFollowing || onEdit) {\r\n            dispatch({type: GLOBALTYPES.MODAL, payload: true});\r\n        } else {\r\n            dispatch({type: GLOBALTYPES.MODAL, payload: false});\r\n        }\r\n    }, [showFollowers, showFollowing, onEdit, dispatch]);\r\n\r\n    return (\r\n        <div className=\"info\">\r\n            {userData.map((user) => (\r\n                <div key={user._id} className=\"info-container\">\r\n                    <Avatar src={user.avatar} size=\"supper-avatar\"/>\r\n\r\n                    <div className=\"info-content\">\r\n                        <span className=\"info-content_username\">{user.username}</span>\r\n                        <div className=\"info-content_buttons\">\r\n                            {user._id === auth.user._id ? (\r\n                                <button className=\"info-content_button\"\r\n                                    onClick={() => dispatch({type: GLOBALTYPES.EDIT_PROFILE, payload: true})}\r\n                                >\r\n                                    Chỉnh sửa trang cá nhân\r\n                                </button>\r\n                            ) : (\r\n                                <FollowButton user={user}/>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"info-content_follows\">\r\n                            <span className=\"info-content_follow\" onClick={() => setShowFollowers(true)}>\r\n                              {user.followers.length} người theo dõi\r\n                            </span>\r\n                            <span className=\"info-content_follow\" onClick={() => setShowFollowing(true)}>\r\n                              Đã theo dõi {user.following.length} người\r\n                            </span>\r\n                        </div>\r\n\r\n                        <span className=\"info-content_name\">{user.fullName}</span>\r\n                        <span className=\"info-content_email\">{user.email}</span>\r\n                        <span className=\"info-content_website\">{user.website}</span>\r\n                        <p className=\"info-content_story\">\"{user.story}\"</p>\r\n                    </div>\r\n\r\n                    {showFollowers && (\r\n                        <Followers\r\n                            users={user.followers}\r\n                            setShowFollowers={setShowFollowers}\r\n                        />\r\n                    )}\r\n\r\n                    {showFollowing && (\r\n                        <Following\r\n                            users={user.following}\r\n                            setShowFollowing={setShowFollowing}\r\n                        />\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info","import React, { useState, useEffect } from \"react\";\r\nimport PostThumb from \"../PostThumb\";\r\nimport LoadMoreButton from \"../LoadMoreButton\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Saved = ({ auth, dispatch }) => {\r\n    const [savePosts, setSavePosts] = useState([]);\r\n    const [result, setResult] = useState(9);\r\n    const [page, setPage] = useState(2);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoad(true);\r\n        getDataAPI(`getSavePosts`, auth.token)\r\n            .then(res => {\r\n                setSavePosts(res.data.savePosts)\r\n                setResult(res.data.result)\r\n                setLoad(false)\r\n            })\r\n            .catch(err => {\r\n                dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n            })\r\n\r\n        return () => setSavePosts([]);\r\n    }, [dispatch, auth.token]);\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true);\r\n        const res = await getDataAPI(`getSavePosts?limit=${page * 9}`, auth.token);\r\n        setSavePosts(res.data.savePosts);\r\n        setResult(res.data.result);\r\n        setPage(page + 1);\r\n        setLoad(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <PostThumb posts={savePosts} result={result} />\r\n\r\n            {load && (\r\n                <img src={LoadIcon} alt=\"Loading...\"/>\r\n            )}\r\n\r\n            <LoadMoreButton\r\n                result={result}\r\n                page={page}\r\n                load={load}\r\n                handleLoadMore={handleLoadMore}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Saved;","import React, { useState, useEffect } from \"react\";\r\nimport PostThumb from \"../PostThumb\";\r\nimport LoadMoreButton from \"../LoadMoreButton\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { PROFILE_TYPES } from \"../../redux/actions/profileAction\";\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Posts = ({ auth, profile, dispatch, id }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [result, setResult] = useState(9);\r\n    const [page, setPage] = useState(0);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        profile.posts.forEach((data) => {\r\n            if (data._id === id) {\r\n                setPosts(data.posts);\r\n                setResult(data.result);\r\n                setPage(data.page);\r\n            }\r\n        });\r\n    }, [profile.posts, id]);\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true);\r\n        const res = await getDataAPI(\r\n            `user_posts/${id}?limit=${page * 9}`,\r\n            auth.token\r\n        );\r\n        const newData = { ...res.data, page: page + 1, _id: id };\r\n        dispatch({ type: PROFILE_TYPES.UPDATE_POST, payload: newData });\r\n        setLoad(false);\r\n    };\r\n    return (\r\n        <>\r\n            <PostThumb posts={posts} result={result} />\r\n\r\n            {load && (\r\n                <img src={LoadIcon} alt=\"Loading...\"/>\r\n            )}\r\n\r\n            <LoadMoreButton\r\n                result={result}\r\n                page={page}\r\n                load={load}\r\n                handleLoadMore={handleLoadMore}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {getProfileUsers} from \"../../redux/actions/profileAction\";\r\nimport Info from \"../../components/profile/Info\";\r\nimport Saved from \"../../components/profile/Saved\";\r\nimport Posts from \"../../components/profile/Posts\";\r\n\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst Profile = () => {\r\n    const { profile, auth } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const { id } = useParams();\r\n    const [saveTab, setSaveTab] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(profile.ids.every(item => item !== id )){\r\n            dispatch(getProfileUsers({ id, auth }));\r\n\r\n        }\r\n    }, [id, auth, dispatch, profile.ids]);\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <Info auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n\r\n            {auth.user._id === id && (\r\n                <div className=\"profile_tab\">\r\n                    <button\r\n                        className={saveTab ? \"\" : \"active\"}\r\n                        onClick={() => setSaveTab(false)}\r\n                    >\r\n                        Bài viết\r\n                    </button>\r\n                    <button\r\n                        className={saveTab ? \"active\" : \"\"}\r\n                        onClick={() => setSaveTab(true)}\r\n                    >\r\n                        Đã lưu\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {profile.loading ? (\r\n                <img className=\"d-block mx-auto my-4\" src={LoadIcon} alt=\"Loading\" />\r\n            ) : (\r\n                <>\r\n                    {\r\n                        saveTab\r\n                            ? <Saved auth={auth} dispatch={dispatch}  />\r\n                            : <Posts auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n                    }\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Avatar from '../Avatar';\r\nimport {imageShow, videoShow} from '../../utils/mediaShow';\r\nimport {deleteMessages} from \"../../redux/actions/messageAction\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst MsgDisplay = ({user, msg, type, data}) => {\r\n    const {auth} = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDeleteMessages = () => {\r\n        if (!data) return;\r\n\r\n        if (window.confirm('Bạn thật sự muốn xoá?')) {\r\n            dispatch(deleteMessages({msg, data, auth}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`message-msgDisplay_${type}`}>\r\n                <div className={`message-msgDisplay_avatar`}>\r\n                    <Avatar src={user.avatar} size=\"small-avatar\"/>\r\n                </div>\r\n                <span>{user.username}</span>\r\n            </div>\r\n\r\n            <div className=\"message-msgDisplay_content\">\r\n                {msg.text && (\r\n                    <div className={`message-msgDisplay_text-${type}`}>\r\n                        {msg.text}\r\n                    </div>\r\n                )}\r\n\r\n                {msg.media && msg.media.map((item, index) => (\r\n                    <div key={index} style={{maxWidth: '380px', maxHeight: '380px'}}>\r\n                        {item.url.match(/video/i)\r\n                            ? videoShow(item.url)\r\n                            : imageShow(item.url)}\r\n                    </div>\r\n                ))}\r\n\r\n                {\r\n                    user._id === auth.user._id &&\r\n                    <div className=\"message-msgDisplay_trash\">\r\n                        <i className=\"fas fa-trash text-danger\" onClick={handleDeleteMessages}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={`message-msgDisplay_date-${type}`}>\r\n                {new Date(msg.createdAt).toLocaleString()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MsgDisplay","import React, {useEffect, useState, useRef} from 'react';\r\nimport UserCard from \"../UserCard\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport MsgDisplay from './MsgDisplay';\r\nimport {GLOBALTYPES} from '../../redux/actions/globalTypes';\r\nimport {imageShow, videoShow} from '../../utils/mediaShow';\r\nimport {imageUpload} from '../../utils/imageUpload';\r\nimport {\r\n    addMessage,\r\n    deleteConversation,\r\n    getMessages,\r\n    loadMoreMessages,\r\n    MESSAGE_TYPES\r\n} from '../../redux/actions/messageAction';\r\n\r\nconst LoadIcon = 'https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1626030734/Spinner-0.4s-257px_v8vrp7.gif'\r\n\r\nconst RightSide = () => {\r\n    const {auth, message, theme, socket} = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const {id} = useParams();\r\n    const [user, setUser] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [data, setData] = useState([]);\r\n\r\n    const [media, setMedia] = useState([]);\r\n    const [loadMedia, setLoadMedia] = useState(false);\r\n\r\n    const refDisplay = useRef();\r\n    const pageEnd = useRef();\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const newData = message.data.filter(\r\n            (item) => item.sender === auth.user._id || item.sender === id\r\n        );\r\n        setData(newData);\r\n    }, [message.data, auth.user._id, id]);\r\n\r\n    useEffect(() => {\r\n        const newUser = message.users.find((user) => user._id === id);\r\n        if (newUser) {\r\n            setUser(newUser);\r\n        }\r\n    }, [message.users, id]);\r\n\r\n    // Gởi Tin nhắn ảnh\r\n    const handleChangeMedia = (e) => {\r\n        const files = [...e.target.files];\r\n        let err = \"\";\r\n        let newMedia = [];\r\n\r\n        files.forEach((file) => {\r\n            if (!file) {\r\n                return (err = \"File does not exist.\");\r\n            }\r\n            if (file.size > 1024 * 1024 * 5) {\r\n                return (err = \"Image size must be less than 5 mb.\");\r\n            }\r\n            return newMedia.push(file);\r\n        });\r\n        if (err) {\r\n            dispatch({type: GLOBALTYPES.ALERT, payload: {error: err}});\r\n        }\r\n        setMedia([...media, ...newMedia]);\r\n    };\r\n\r\n    const handleDeleteMedia = (index) => {\r\n        const newArr = [...media];\r\n        newArr.splice(index, 1);\r\n        setMedia(newArr);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const getMessagesData = async () => {\r\n                dispatch({type: MESSAGE_TYPES.GET_MESSAGES, payload: {messages: []}});\r\n                setPage(1);\r\n                await dispatch(getMessages({auth, id}));\r\n                setTimeout(() => {\r\n                    refDisplay.current.scrollIntoView({behavior: 'smooth', block: 'end'})\r\n                },100)\r\n            };\r\n\r\n\r\n            getMessagesData();\r\n        }\r\n    }, [id, dispatch, auth]);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if (!text.trim() && media.length === 0) return;\r\n        setText('');\r\n        setMedia([]);\r\n\r\n        setLoadMedia(true);\r\n\r\n        let newArr = [];\r\n        if (media.length > 0) newArr = await imageUpload(media);\r\n\r\n        const msg = {\r\n            sender: auth.user._id,\r\n            recipient: id,\r\n            text,\r\n            media: newArr,\r\n            createdAt: new Date().toISOString()\r\n        }\r\n        setLoadMedia(false);\r\n\r\n        await dispatch(addMessage({msg, auth, socket}));\r\n        if (refDisplay.current) {\r\n            refDisplay.current.scrollIntoView({\r\n                behaviour: \"smooth\",\r\n                block: \"end\",\r\n            });\r\n        }\r\n    };\r\n\r\n    // load more\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    setPage((p) => p + 1);\r\n                }\r\n            },\r\n            {\r\n                threshold: 0.1,\r\n            }\r\n        );\r\n\r\n        observer.observe(pageEnd.current);\r\n    }, [setPage]);\r\n\r\n    useEffect(() => {\r\n        if (message.resultData >= (page - 1) * 9 && page > 1) {\r\n            dispatch(getMessages({auth, id, page}));\r\n        }\r\n    }, [message.resultData, page, id, auth, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (refDisplay.current) {\r\n            refDisplay.current.scrollIntoView({\r\n                behaviour: \"smooth\",\r\n                block: \"end\",\r\n            });\r\n        }\r\n    }, [text])\r\n\r\n    const handleDeleteConversation = () => {\r\n        if (window.confirm('Bạn thật sự muốn xoá?')) {\r\n            dispatch(deleteConversation({auth, id}))\r\n            return history.push('/message')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"message-header\">\r\n                {user.length !== 0 && (\r\n                    <UserCard user={user}>\r\n                        <i className=\"fas fa-trash text-danger\" onClick={handleDeleteConversation}/>\r\n                    </UserCard>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"message-body\">\r\n                <div className=\"message-body-chat\" ref={refDisplay}>\r\n                    <button style={{marginTop: '-25px', opacity: 0}} ref={pageEnd}>\r\n                        Xem thêm\r\n                    </button>\r\n\r\n                    {data.map((msg, index) => (\r\n                        <div key={index}>\r\n                            {msg.sender !== auth.user._id && (\r\n                                <div className=\"message-body-chat_other\">\r\n                                    <MsgDisplay user={user} msg={msg} type=\"other\"/>\r\n                                </div>\r\n                            )}\r\n                            {msg.sender === auth.user._id && (\r\n                                <div className=\"message-body-chat_you\">\r\n                                    <MsgDisplay user={auth.user} msg={msg} type=\"you\" data={data}/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n\r\n                    {loadMedia && (\r\n                        <div className=\"chat_row you_message\">\r\n                            <img src={LoadIcon} alt=\"Loading...\"/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <form className=\"message-footer\" onSubmit={handleSubmit}>\r\n                <div className=\"message-footer_upload\">\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"fileUploadMessage\"\r\n                        multiple\r\n                        accept=\"image/*,video/*\"\r\n                        style={{display: \"none\"}}\r\n                        onChange={handleChangeMedia}\r\n                    />\r\n                    <label htmlFor=\"fileUploadMessage\">\r\n                        <img\r\n                            src=\"https://res.cloudinary.com/nguyenhnhatquang/image/upload/v1627442469/icon/picture_sphbkd.svg\"\r\n                            alt=\"message\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <input\r\n                    className=\"message-footer_input\"\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"message-footer_submit\"\r\n                    disabled={text || media.length > 0 ? false : true}\r\n                >\r\n                    <i className=\"far fa-paper-plane\"/>\r\n                </button>\r\n\r\n                <div\r\n                    className=\"message-footer_media\"\r\n                    style={{display: media.length > 0 ? \"\" : \"none\"}}\r\n                >\r\n                    {media.map((item, index) => (\r\n                        <div key={index} className=\"message-footer_media-image\">\r\n                            {item.type.match(/video/i)\r\n                                ? videoShow(URL.createObjectURL(item), theme)\r\n                                : imageShow(URL.createObjectURL(item), theme)}\r\n                            <span onClick={() => handleDeleteMedia(index)}>&times;</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RightSide","import React from \"react\";\r\nimport LeftSide from \"../../components/message/LeftSide\";\r\nimport RightSide from \"../../components/message/RightSide\";\r\n\r\nconst Conversation = () => {\r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"spaceRight\"></div>\r\n            <div className=\"messageBody\">\r\n                <div className=\"message-left\">\r\n                    <LeftSide/>\r\n                </div>\r\n\r\n                <div className=\"message-right\">\r\n                    <RightSide/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Conversation;"],"sourceRoot":""}